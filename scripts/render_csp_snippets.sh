#!/usr/bin/env bash
# Render Content Security Policy snippets for Nginx from the shared JSON policy.
set -euo pipefail

INPUT_FILE=${1:-"$(dirname "$0")/../configs/security/csp_policy.json"}
OUTPUT_DIR=${2:-"$(dirname "$0")/../deploy/nginx/snippets"}

if ! command -v jq >/dev/null 2>&1; then
  echo "error: jq is required to render CSP snippets" >&2
  exit 1
fi

if [[ ! -f "$INPUT_FILE" ]]; then
  echo "error: policy file not found at $INPUT_FILE" >&2
  exit 1
fi

mkdir -p "$OUTPUT_DIR"

policy_value=$(jq -er '.directives | to_entries | map(.key + " " + .value) | join("; ")' "$INPUT_FILE") || {
  echo "error: failed to read directives from $INPUT_FILE" >&2
  exit 1
}

if [[ -z "$policy_value" ]]; then
  echo "error: directives list is empty" >&2
  exit 1
fi

policy_value+=";"

enforce_file="$OUTPUT_DIR/csp-enforce.conf"
report_only_file="$OUTPUT_DIR/csp-report-only.conf"

cat >"$enforce_file" <<EOF
# Generated by scripts/render_csp_snippets.sh from $(basename "$INPUT_FILE")
add_header Content-Security-Policy "$policy_value" always;
EOF

cat >"$report_only_file" <<EOF
# Generated by scripts/render_csp_snippets.sh from $(basename "$INPUT_FILE")
add_header Content-Security-Policy-Report-Only "$policy_value" always;
EOF

echo "CSP snippets written to $OUTPUT_DIR"
