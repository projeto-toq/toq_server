{
    "swagger": "2.0",
    "info": {
        "description": "TOQ Server - Real Estate HTTP API Server with hexagonal architecture.",
        "title": "TOQ Server API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "TOQ Development Team",
            "url": "https://github.com/projeto-toq/toq_server",
            "email": "projeto.toq@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://github.com/projeto-toq/toq_server/blob/main/LICENSE"
        },
        "version": "2.0"
    },
    "host": "api.gca.dev.br",
    "basePath": "/api/v2",
    "paths": {
        "/admin/complexes": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "List complexes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Complex name filter",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Complex zip code",
                        "name": "zipCode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Complex city",
                        "name": "city",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Complex state",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Sector identifier",
                        "name": "sector",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Property type identifier",
                        "name": "propertyType",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminListComplexesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update a complex",
                "parameters": [
                    {
                        "description": "Complex payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminUpdateComplexRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ComplexResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Create a complex",
                "parameters": [
                    {
                        "description": "Complex payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminCreateComplexRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ComplexResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Delete a complex",
                "parameters": [
                    {
                        "description": "Complex deletion payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminDeleteComplexRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Complex deleted"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/complexes/detail": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get complex detail",
                "parameters": [
                    {
                        "description": "Complex detail payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminGetComplexDetailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ComplexResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/complexes/sizes": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "List complex sizes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Complex identifier",
                        "name": "complexId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminListComplexSizesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update a complex size",
                "parameters": [
                    {
                        "description": "Complex size payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminUpdateComplexSizeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ComplexSizeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Create a complex size",
                "parameters": [
                    {
                        "description": "Complex size payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminCreateComplexSizeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ComplexSizeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Delete a complex size",
                "parameters": [
                    {
                        "description": "Complex size deletion payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminDeleteComplexSizeRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Complex size deleted"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/complexes/sizes/detail": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get complex size detail",
                "parameters": [
                    {
                        "description": "Complex size detail payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminGetComplexSizeDetailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ComplexSizeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/complexes/towers": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "List complex towers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Complex identifier",
                        "name": "complexId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tower name filter",
                        "name": "tower",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminListComplexTowersResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update a complex tower",
                "parameters": [
                    {
                        "description": "Complex tower payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminUpdateComplexTowerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ComplexTowerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Create a complex tower",
                "parameters": [
                    {
                        "description": "Complex tower payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminCreateComplexTowerRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ComplexTowerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Delete a complex tower",
                "parameters": [
                    {
                        "description": "Complex tower deletion payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminDeleteComplexTowerRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Complex tower deleted"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/complexes/towers/detail": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get complex tower detail",
                "parameters": [
                    {
                        "description": "Complex tower detail payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminGetComplexTowerDetailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ComplexTowerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/complexes/zip-codes": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "List complex zip codes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Complex identifier",
                        "name": "complexId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Zip code filter",
                        "name": "zipCode",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminListComplexZipCodesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update a complex zip code",
                "parameters": [
                    {
                        "description": "Complex zip code payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminUpdateComplexZipCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ComplexZipCodeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Create a complex zip code",
                "parameters": [
                    {
                        "description": "Complex zip code payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminCreateComplexZipCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ComplexZipCodeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Delete a complex zip code",
                "parameters": [
                    {
                        "description": "Complex zip code deletion payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminDeleteComplexZipCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Complex zip code deleted"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/complexes/zip-codes/detail": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get complex zip code detail",
                "parameters": [
                    {
                        "description": "Complex zip code detail payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminGetComplexZipCodeDetailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ComplexZipCodeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/holidays/calendars": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns holiday calendars with filtering and pagination options.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Holidays"
                ],
                "summary": "List holiday calendars",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"STATE\"",
                        "description": "Calendar scope (NATIONAL|STATE|CITY)",
                        "name": "scope",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"SP\"",
                        "description": "State abbreviation",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"3509502\"",
                        "description": "City IBGE code",
                        "name": "cityIbge",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"Christmas\"",
                        "description": "Free text search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "example": true,
                        "description": "Filter active calendars",
                        "name": "onlyActive",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 20,
                        "description": "Page size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.HolidayCalendarsListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing holiday calendar metadata.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Holidays"
                ],
                "summary": "Update holiday calendar",
                "parameters": [
                    {
                        "x-example": "{\"id\":42,\"name\":\"Calendario Campinas\",\"scope\":\"CITY\",\"state\":\"SP\",\"cityIbge\":\"3509502\",\"isActive\":true}",
                        "description": "Calendar update payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.HolidayCalendarUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.HolidayCalendarResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new holiday calendar available for scheduling operations.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Holidays"
                ],
                "summary": "Create holiday calendar",
                "parameters": [
                    {
                        "x-example": "{\"name\":\"Feriados Sao Paulo\",\"scope\":\"STATE\",\"state\":\"SP\",\"cityIbge\":\"\",\"isActive\":true}",
                        "description": "Calendar payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.HolidayCalendarCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.HolidayCalendarResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/holidays/calendars/detail": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns the metadata of a specific holiday calendar.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Holidays"
                ],
                "summary": "Get holiday calendar detail",
                "parameters": [
                    {
                        "x-example": "{\"id\":42}",
                        "description": "Calendar detail request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.HolidayCalendarDetailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.HolidayCalendarResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/holidays/dates": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns holiday dates for a calendar with optional range filters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Holidays"
                ],
                "summary": "List holiday dates",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 42,
                        "description": "Calendar identifier",
                        "name": "calendarId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"2025-12-01T00:00:00Z\"",
                        "description": "Start date (RFC3339)",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"2026-01-10T23:59:59Z\"",
                        "description": "End date (RFC3339)",
                        "name": "to",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 50,
                        "description": "Page size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.HolidayCalendarDatesListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Registers a new holiday date within a calendar.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Holidays"
                ],
                "summary": "Create holiday date",
                "parameters": [
                    {
                        "x-example": "{\"calendarId\":42,\"holidayDate\":\"2025-12-25T00:00:00Z\",\"label\":\"Christmas\",\"recurrent\":true}",
                        "description": "Holiday date payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.HolidayCalendarDateCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.HolidayCalendarDateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Removes a holiday date from a calendar.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Holidays"
                ],
                "summary": "Delete holiday date",
                "parameters": [
                    {
                        "x-example": "{\"id\":1001}",
                        "description": "Holiday date delete request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.HolidayCalendarDateDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Holiday date deleted"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/listing/catalog": {
            "get": {
                "description": "Available categories: property_owner, property_delivered, who_lives, transaction_type, installment_plan, financing_blocker, visit_type, accompanying_type, guarantee_type.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "List listing catalog values",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catalog category",
                        "name": "category",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Include inactive values",
                        "name": "includeInactive",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogValuesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update a listing catalog value",
                "parameters": [
                    {
                        "description": "Partial update payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogValueResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Create a listing catalog value",
                "parameters": [
                    {
                        "description": "Creation payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogValueResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Deactivate a listing catalog value",
                "parameters": [
                    {
                        "description": "Deactivation payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Catalog value deactivated"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/listing/catalog/detail": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get listing catalog value detail",
                "parameters": [
                    {
                        "description": "Listing catalog detail payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminGetListingCatalogDetailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogValueResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/listing/catalog/restore": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Reactivate a listing catalog value",
                "parameters": [
                    {
                        "description": "Reactivation payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogRestoreRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogValueResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/permissions": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "List permissions with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "example": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "example": 20,
                        "description": "Page size",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name (supports '*' wildcard)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by resource (supports '*' wildcard)",
                        "name": "resource",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by action (supports '*' wildcard)",
                        "name": "action",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by active flag",
                        "name": "isActive",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminListPermissionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update an existing permission",
                "parameters": [
                    {
                        "description": "Permission payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminUpdatePermissionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminPermissionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Create a new permission",
                "parameters": [
                    {
                        "description": "Permission payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminCreatePermissionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminPermissionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Hard delete a permission",
                "parameters": [
                    {
                        "description": "Permission identifier",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminDeletePermissionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminPermissionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/permissions/detail": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get permission detail",
                "parameters": [
                    {
                        "description": "Permission detail payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminGetPermissionDetailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminPermissionSummary"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/role-permissions": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "List role-permission associations",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "example": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "example": 20,
                        "description": "Page size",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by role ID",
                        "name": "roleId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by permission ID",
                        "name": "permissionId",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by granted flag",
                        "name": "granted",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminListRolePermissionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update a role-permission association",
                "parameters": [
                    {
                        "description": "Role-permission payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminUpdateRolePermissionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminRolePermissionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Create a role-permission association",
                "parameters": [
                    {
                        "description": "Role-permission payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminCreateRolePermissionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminRolePermissionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Delete a role-permission association",
                "parameters": [
                    {
                        "description": "Role-permission payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminDeleteRolePermissionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminRolePermissionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/role-permissions/detail": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get role-permission detail",
                "parameters": [
                    {
                        "description": "Role-permission detail payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminGetRolePermissionDetailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminRolePermissionSummary"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/roles": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "List roles with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "example": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "example": 20,
                        "description": "Page size",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"*Manager*\"",
                        "description": "Filter by name (supports '*' wildcard)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"*admin*\"",
                        "description": "Filter by slug (supports '*' wildcard)",
                        "name": "slug",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"*acesso*\"",
                        "description": "Filter by description (supports '*' wildcard)",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "example": true,
                        "description": "Filter by system role flag",
                        "name": "isSystemRole",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "example": true,
                        "description": "Filter by active flag",
                        "name": "isActive",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 10,
                        "description": "Filter by role ID (from)",
                        "name": "idFrom",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 200,
                        "description": "Filter by role ID (to)",
                        "name": "idTo",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminListRolesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update a role",
                "parameters": [
                    {
                        "description": "Role update payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminUpdateRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminRoleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Create a role",
                "parameters": [
                    {
                        "description": "Role payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminCreateRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminRoleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Delete (deactivate) a role",
                "parameters": [
                    {
                        "description": "Role deletion payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminDeleteRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Role deactivated"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/roles/detail": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get role detail",
                "parameters": [
                    {
                        "description": "Role detail payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminGetRoleDetailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminRoleSummary"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/roles/restore": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Reactivate a role",
                "parameters": [
                    {
                        "description": "Role reactivation payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminRestoreRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminRoleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/users": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "List admin-facing users with filters",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "example": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "example": 20,
                        "description": "Page size",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"*manager*\"",
                        "description": "Filter by role name (supports '*' wildcard)",
                        "name": "roleName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"*admin*\"",
                        "description": "Filter by role slug (supports '*' wildcard)",
                        "name": "roleSlug",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Filter by role status enum",
                        "name": "roleStatus",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "example": true,
                        "description": "Filter by system role flag",
                        "name": "isSystemRole",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"*Silva*\"",
                        "description": "Filter by full name (supports '*' wildcard)",
                        "name": "fullName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"123*456\"",
                        "description": "Filter by CPF (supports '*' wildcard)",
                        "name": "cpf",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"*toq.com*\"",
                        "description": "Filter by email (supports '*' wildcard)",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"*119*\"",
                        "description": "Filter by phone (supports '*' wildcard)",
                        "name": "phoneNumber",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "example": false,
                        "description": "Filter by deletion flag",
                        "name": "deleted",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 100,
                        "description": "Filter by user ID (from)",
                        "name": "idFrom",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 250,
                        "description": "Filter by user ID (to)",
                        "name": "idTo",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"1990-01-01\"",
                        "description": "Filter by birth date from (RFC3339 or YYYY-MM-DD)",
                        "name": "bornAtFrom",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"2000-12-31\"",
                        "description": "Filter by birth date to (RFC3339 or YYYY-MM-DD)",
                        "name": "bornAtTo",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"2025-01-01T00:00:00Z\"",
                        "description": "Filter by last activity from (RFC3339 or YYYY-MM-DD)",
                        "name": "lastActivityFrom",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"2025-01-31T23:59:59Z\"",
                        "description": "Filter by last activity to (RFC3339 or YYYY-MM-DD)",
                        "name": "lastActivityTo",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminListUsersResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/users/creci/approve": {
            "post": {
                "description": "Status must be one of the allowed enum values. On success, sends FCM notification.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Approve or refuse realtor status manually",
                "parameters": [
                    {
                        "description": "User ID and target status (enum: 0=active,10=refused_image,11=refused_document,12=refused_data)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminApproveUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminApproveUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/users/creci/download-url": {
            "post": {
                "description": "Returns signed URLs (selfie/front/back) for a realtor user, valid for a limited time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get signed download URLs for CRECI documents",
                "parameters": [
                    {
                        "description": "User ID",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminCreciDownloadURLRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminCreciDownloadURLResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/users/creci/pending": {
            "get": {
                "description": "Returns id, nickname, fullName, nationalID, creciNumber, creciValidity, creciState",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "List realtors pending manual validation",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "example": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "example": 20,
                        "description": "Page size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminGetPendingRealtorsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/users/detail": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get full user by ID",
                "parameters": [
                    {
                        "description": "User ID",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminGetUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminGetUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/users/system": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update system user data",
                "parameters": [
                    {
                        "description": "Update payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminUpdateSystemUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminSystemUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Create a new system user",
                "parameters": [
                    {
                        "description": "System user payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminCreateSystemUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminSystemUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Deactivate a system user",
                "parameters": [
                    {
                        "description": "Deletion payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminDeleteSystemUserRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "System user deactivated"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/agency": {
            "post": {
                "description": "Create a new agency account with user information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Create agency account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device ID (UUIDv4). Optional but recommended when providing deviceToken for automatic sign-in",
                        "name": "X-Device-Id",
                        "in": "header"
                    },
                    {
                        "description": "Agency creation data (include optional deviceToken for push notifications)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CreateAgencyRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CreateAgencyResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/owner": {
            "post": {
                "description": "Create a new owner account with user information. Address fields come from CEP lookup, except number, neighborhood and complement which honor the request payload.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Create owner account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device ID (UUIDv4). Optional but recommended when providing deviceToken for automatic sign-in",
                        "name": "X-Device-Id",
                        "in": "header"
                    },
                    {
                        "description": "Owner creation data (include optional deviceToken for push notifications)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CreateOwnerRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CreateOwnerResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error (invalid input data)",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Validation failed (see details)",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/password/confirm": {
            "post": {
                "description": "Confirm password change using verification code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Confirm password change",
                "parameters": [
                    {
                        "description": "Password change confirmation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ConfirmPasswordChangeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ConfirmPasswordChangeResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Password change not pending",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "410": {
                        "description": "Verification code expired",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Invalid verification code or password validation failed",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/password/request": {
            "post": {
                "description": "Initiate password change process by sending verification code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Request password change",
                "parameters": [
                    {
                        "description": "Password change request data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.RequestPasswordChangeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.RequestPasswordChangeResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/realtor": {
            "post": {
                "description": "Create a new realtor account with user and CRECI information. Address fields come from CEP lookup, except number, neighborhood and complement which honor the request payload. CRECI number must be numeric ending with \"-F\" and CRECI state must be a valid Brazilian UF (both required).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Create realtor account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device ID (UUIDv4). Optional but recommended when providing deviceToken for automatic sign-in",
                        "name": "X-Device-Id",
                        "in": "header"
                    },
                    {
                        "description": "Realtor creation data (include optional deviceToken for push notifications)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CreateRealtorRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CreateRealtorResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error (invalid input data)",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Validation failed (see details)",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Generate new access token using refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh access token",
                "parameters": [
                    {
                        "description": "Refresh token data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.RefreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.RefreshTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid or expired refresh token",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/signin": {
            "post": {
                "description": "Authenticate user with national ID and password. Requires deviceToken body field and X-Device-Id (UUIDv4) header for per-device associations.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User sign in",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device ID (UUIDv4). Required for associating sessions to devices.",
                        "name": "X-Device-Id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Sign in credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.SignInRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful authentication",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.SignInResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format or missing/invalid deviceToken or X-Device-Id header",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "No active user roles",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Account temporarily locked due to security measures",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too many attempts",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/validate/cep": {
            "post": {
                "description": "Retrieves CEP information using the configured provider. Requires signed payload.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Validate CEP",
                "parameters": [
                    {
                        "description": "Signed CEP validation payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ValidateCEPRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CEPValidationResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid signature or expired request",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Semantic validation error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Rate limited",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/validate/cnpj": {
            "post": {
                "description": "Validates a CNPJ using Receita Federal integration. Requires signed payload.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Validate CNPJ",
                "parameters": [
                    {
                        "description": "Signed CNPJ validation payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ValidateCNPJRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ValidationResultResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid signature or expired request",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Semantic validation error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Rate limited",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/validate/cpf": {
            "post": {
                "description": "Validates a CPF using Receita Federal integration. Requires signed payload.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Validate CPF",
                "parameters": [
                    {
                        "description": "Signed CPF validation payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ValidateCPFRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ValidationResultResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid signature or expired request",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Semantic validation error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Rate limited",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/complex/sizes": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Complex"
                ],
                "summary": "List complex sizes by address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Complex zip code",
                        "name": "zipCode",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Complex street number",
                        "name": "number",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListSizesByAddressResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/listings": {
            "get": {
                "description": "Supports pagination, wildcard search for strings using '*', and range filters for numbers and dates.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listings"
                ],
                "summary": "List all listings with filters",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "example": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "example": 20,
                        "description": "Page size",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"PUBLISHED\"",
                        "description": "Listing status (enum name or numeric)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1024,
                        "description": "Exact listing code",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"*garden*\"",
                        "description": "Filter by listing title/description (supports '*' wildcard)",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 55,
                        "description": "Filter by owner user id",
                        "name": "userId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"06543*\"",
                        "description": "Filter by zip code (digits only; supports '*' wildcard)",
                        "name": "zipCode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"*Paulista*\"",
                        "description": "Filter by city (supports '*' wildcard)",
                        "name": "city",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"*Centro*\"",
                        "description": "Filter by neighborhood (supports '*' wildcard)",
                        "name": "neighborhood",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"2025-01-01\"",
                        "description": "Filter by creation date from (RFC3339 or YYYY-MM-DD)",
                        "name": "createdFrom",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"2025-01-31\"",
                        "description": "Filter by creation date to (RFC3339 or YYYY-MM-DD)",
                        "name": "createdTo",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 100000,
                        "description": "Minimum sell price",
                        "name": "minSell",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 900000,
                        "description": "Maximum sell price",
                        "name": "maxSell",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 1500,
                        "description": "Minimum rent price",
                        "name": "minRent",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 8000,
                        "description": "Maximum rent price",
                        "name": "maxRent",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 120.5,
                        "description": "Minimum land size",
                        "name": "minLandSize",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 500.75,
                        "description": "Maximum land size",
                        "name": "maxLandSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetAllListingsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Allows partial updates for draft listings. Omitted fields remain unchanged; present fields (including null/empty) overwrite stored values.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listings"
                ],
                "summary": "Update a listing",
                "parameters": [
                    {
                        "x-example": "{\"id\":98765,\"owner\":\"myself\",\"features\":[{\"featureId\":101,\"quantity\":2},{\"featureId\":205,\"quantity\":1}],\"landSize\":423.5,\"corner\":true,\"nonBuildable\":12.75,\"buildable\":410.75,\"delivered\":\"furnished\",\"whoLives\":\"tenant\",\"description\":\"Apartamento amplo com vista panoramica\",\"transaction\":\"sale\",\"sellNet\":1200000,\"rentNet\":8500,\"condominium\":1200.5,\"annualTax\":3400.75,\"annualGroundRent\":1800,\"exchange\":true,\"exchangePercentual\":50,\"exchangePlaces\":[{\"neighborhood\":\"Vila Mariana\",\"city\":\"Sao Paulo\",\"state\":\"SP\"},{\"neighborhood\":\"Centro\",\"city\":\"Campinas\",\"state\":\"SP\"}],\"installment\":\"short_term\",\"financing\":true,\"financingBlockers\":[\"pending_probate\",\"other\"],\"guarantees\":[{\"priority\":1,\"guarantee\":\"security_deposit\"},{\"priority\":2,\"guarantee\":\"surety_bond\"}],\"visit\":\"client\",\"tenantName\":\"Joao da Silva\",\"tenantEmail\":\"joao.silva@example.com\",\"tenantPhone\":\"+55 11 91234-5678\",\"accompanying\":\"assistant\"}",
                        "description": "Payload for update (ID must be provided in the body)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UpdateListingRequest"
                        }
                    },
                    {
                        "x-example": "{\"id\":98765,\"owner\":\"myself\",\"features\":[{\"featureId\":101,\"quantity\":2},{\"featureId\":205,\"quantity\":1}],\"landSize\":423.5,\"corner\":true,\"nonBuildable\":12.75,\"buildable\":410.75,\"delivered\":\"furnished\",\"whoLives\":\"tenant\",\"description\":\"Apartamento amplo com vista panoramica\",\"transaction\":\"sale\",\"sellNet\":1200000,\"rentNet\":8500,\"condominium\":1200.5,\"annualTax\":3400.75,\"annualGroundRent\":1800,\"exchange\":true,\"exchangePercentual\":50,\"exchangePlaces\":[{\"neighborhood\":\"Vila Mariana\",\"city\":\"Sao Paulo\",\"state\":\"SP\"},{\"neighborhood\":\"Centro\",\"city\":\"Campinas\",\"state\":\"SP\"}],\"installment\":\"short_term\",\"financing\":true,\"financingBlockers\":[\"pending_probate\",\"other\"],\"guarantees\":[{\"priority\":1,\"guarantee\":\"security_deposit\"},{\"priority\":2,\"guarantee\":\"surety_bond\"}],\"visit\":\"client\",\"tenantName\":\"Joao da Silva\",\"tenantEmail\":\"joao.silva@example.com\",\"tenantPhone\":\"+5511912345678\",\"accompanying\":\"assistant\"}",
                        "description": "Payload for update (ID must be provided in the body)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UpdateListingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UpdateListingResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new listing with address details validated against the zip code information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listings"
                ],
                "summary": "Start a new listing",
                "parameters": [
                    {
                        "description": "Listing creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.StartListingRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.StartListingResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/listings/catalog": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Available categories: property_owner, property_delivered, who_lives, transaction_type, installment_plan, financing_blocker, visit_type, accompanying_type, guarantee_type.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listings"
                ],
                "summary": "List active listing catalog values",
                "parameters": [
                    {
                        "description": "Filter payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogValuesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/listings/detail": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns all fields of a listing given its identifier.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listings"
                ],
                "summary": "Get listing detail",
                "parameters": [
                    {
                        "description": "Listing identifier",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetListingDetailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingDetailResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/listings/end-update": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Validates all required listing attributes and transitions status to photo scheduling.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listings"
                ],
                "summary": "Finalize listing update",
                "parameters": [
                    {
                        "x-example": "{\"listingId\":98765}",
                        "description": "Listing identifier",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.EndUpdateListingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.EndUpdateListingResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Listing not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/listings/features/base": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all available base features that can be associated with listings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listings"
                ],
                "summary": "Get base features",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetBaseFeaturesResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/listings/options": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get available property types for listings based on location",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listings"
                ],
                "summary": "Get listing options",
                "parameters": [
                    {
                        "description": "Location data for listing options",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetOptionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetOptionsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Complex not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/listings/photo-session/cancel": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listings"
                ],
                "summary": "Cancel a booked photo session",
                "parameters": [
                    {
                        "x-example": "{\"photoSessionId\":3003}",
                        "description": "Cancel payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CancelPhotoSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Photo session not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/listings/photo-session/confirm": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listings"
                ],
                "summary": "Confirm a photo session reservation",
                "parameters": [
                    {
                        "x-example": "{\"listingId\":1001,\"slotId\":2002,\"reservationToken\":\"c36b754f-6c37-4c15-8f25-9d77ddf9bb3e\"}",
                        "description": "Confirmation payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ConfirmPhotoSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ConfirmPhotoSessionResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Reservation not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Slot unavailable",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/listings/photo-session/reserve": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listings"
                ],
                "summary": "Reserve a photo session slot",
                "parameters": [
                    {
                        "x-example": "{\"listingId\":1001,\"slotId\":2002}",
                        "description": "Reservation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ReservePhotoSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ReservePhotoSessionResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Slot or listing not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Slot unavailable",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/listings/photo-session/slots": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listings"
                ],
                "summary": "List available photographer slots",
                "parameters": [
                    {
                        "type": "string",
                        "format": "date",
                        "example": "2025-10-20",
                        "description": "Start date filter (YYYY-MM-DD)",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date",
                        "example": "2025-10-31",
                        "description": "End date filter (YYYY-MM-DD)",
                        "name": "to",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "MORNING",
                            "AFTERNOON"
                        ],
                        "type": "string",
                        "example": "MORNING",
                        "description": "Slot period",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "date_asc",
                            "date_desc",
                            "photographer_asc",
                            "photographer_desc"
                        ],
                        "type": "string",
                        "default": "date_asc",
                        "description": "Sort order",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListPhotographerSlotsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid filters",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/realtor/creci/upload-url": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a pre-signed URL to upload a CRECI document (selfie/front/back)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Realtor"
                ],
                "summary": "Create pre-signed upload URL for CRECI documents",
                "parameters": [
                    {
                        "description": "Upload request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetCreciUploadURLRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetCreciUploadURLResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Validation error (documentType or contentType)",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/realtor/creci/verify": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Check if selfie.jpg, front.jpg and back.jpg exist in the user's S3 folder; if all exist, set status to PendingManual",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Realtor"
                ],
                "summary": "Verify CRECI documents presence",
                "responses": {
                    "200": {
                        "description": "verification accepted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Missing required documents",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/schedules/listing/availability": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns the available slots for a listing within the provided time range.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedules"
                ],
                "summary": "List listing availability",
                "parameters": [
                    {
                        "x-example": "{\"listingId\":3241,\"range\":{\"from\":\"2025-06-01T08:00:00Z\",\"to\":\"2025-06-01T18:00:00Z\"},\"slotDurationMinute\":30,\"pagination\":{\"page\":1,\"limit\":50}}",
                        "description": "Availability filter",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ScheduleAvailabilityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ScheduleAvailabilityResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/schedules/listing/block": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing blocking or temporary block entry for a listing agenda.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedules"
                ],
                "summary": "Update a blocking entry",
                "parameters": [
                    {
                        "x-example": "{\"entryId\":5021,\"listingId\":3241,\"entryType\":\"TEMP_BLOCK\",\"startsAt\":\"2025-06-20T09:00:00Z\",\"endsAt\":\"2025-06-20T12:00:00Z\",\"reason\":\"Extended maintenance\"}",
                        "description": "Block entry update payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ScheduleBlockEntryUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ScheduleBlockEntryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a blocking or temporary blocking time range for a listing agenda.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedules"
                ],
                "summary": "Create a blocking entry",
                "parameters": [
                    {
                        "x-example": "{\"listingId\":3241,\"entryType\":\"BLOCK\",\"startsAt\":\"2025-06-15T09:00:00Z\",\"endsAt\":\"2025-06-15T11:00:00Z\",\"reason\":\"Maintenance window\"}",
                        "description": "Block entry payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ScheduleBlockEntryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ScheduleBlockEntryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Removes a blocking or temporary block entry from a listing agenda.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedules"
                ],
                "summary": "Delete a blocking entry",
                "parameters": [
                    {
                        "x-example": "{\"entryId\":5021,\"listingId\":3241}",
                        "description": "Block entry deletion payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ScheduleDeleteEntryRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Entry deleted successfully"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/schedules/listing/detail": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns all agenda entries for a specific listing owned by the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedules"
                ],
                "summary": "List agenda entries for a listing",
                "parameters": [
                    {
                        "x-example": "{\"listingId\":3241,\"range\":{\"from\":\"2025-05-10T08:00:00Z\",\"to\":\"2025-05-12T18:00:00Z\"},\"pagination\":{\"page\":1,\"limit\":20}}",
                        "description": "Agenda detail filter",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingAgendaDetailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingAgendaDetailResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/schedules/owner/summary": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a consolidated view of agenda entries for all listings owned by the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedules"
                ],
                "summary": "List owner agenda summary",
                "parameters": [
                    {
                        "x-example": "{\"listingIds\":[3241,3242],\"range\":{\"from\":\"2025-05-01T00:00:00Z\",\"to\":\"2025-05-07T23:59:59Z\"},\"pagination\":{\"page\":1,\"limit\":50}}",
                        "description": "Summary filter",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.OwnerAgendaSummaryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.OwnerAgendaSummaryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/account": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Permanently delete the current user's account. Revokes all sessions, removes device tokens, masks PII, and detaches roles.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete account",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.DeleteAccountResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/email/confirm": {
            "post": {
                "description": "Confirm email change by providing the received validation code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Confirm email change",
                "parameters": [
                    {
                        "description": "Confirmation code",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ConfirmEmailChangeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Confirmation message",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ConfirmEmailChangeResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format or code",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Email change not pending or already in use",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "410": {
                        "description": "Code expired",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Invalid code",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/email/request": {
            "post": {
                "description": "Start email change by generating a validation code for the new email. If a pending change exists (valid or expired), a new code and expiration are generated and persisted, then a notification is sent.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Request email change",
                "parameters": [
                    {
                        "description": "New email",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.RequestEmailChangeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email change request sent",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.RequestEmailChangeResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format or email",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Email already in use",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/email/resend": {
            "post": {
                "description": "Resend the existing (still valid) validation code to the pending new email address. If there is no pending change, returns 409. If the code is expired, returns 410.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Resend email change code",
                "responses": {
                    "200": {
                        "description": "Confirmation message",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ResendEmailChangeCodeResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Email change not pending or email already in use",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "410": {
                        "description": "Code expired",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/opt-status": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update user's consent to receive notifications (opt-in/opt-out)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update opt-in status",
                "parameters": [
                    {
                        "description": "Opt-in request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UpdateOptStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UpdateOptStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/phone/confirm": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Confirm a phone number change using the verification code sent to the new phone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Confirm phone number change",
                "parameters": [
                    {
                        "description": "Phone change confirmation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ConfirmPhoneChangeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ConfirmPhoneChangeResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format or code",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Phone change not pending or phone already in use",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "410": {
                        "description": "Phone change code expired",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Invalid phone change code",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/phone/request": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Start a phone change by generating a validation code for the new phone. If a pending change exists (valid or expired), a new code and expiration are generated and persisted, then a notification is sent.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Request phone number change",
                "parameters": [
                    {
                        "description": "New phone number (E.164)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.RequestPhoneChangeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Phone change request sent",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.RequestPhoneChangeResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format or phone",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Phone already in use",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/phone/resend": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Resend the existing (still valid) validation code to the pending new phone number. If there is no pending change, returns 409. If the code is expired, returns 410.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Resend phone change code",
                "responses": {
                    "200": {
                        "description": "Confirmation message",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ResendPhoneChangeCodeResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Phone change not pending or phone already in use",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "410": {
                        "description": "Code expired",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/photo/download-url": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a pre-signed URL to download a specific profile photo variant from storage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create pre-signed download URL for profile photo",
                "parameters": [
                    {
                        "description": "Download request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetPhotoDownloadURLRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetPhotoDownloadURLResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Validation error (variant)",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/photo/upload-url": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a pre-signed URL to upload a profile photo to storage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create pre-signed upload URL for profile photo",
                "parameters": [
                    {
                        "description": "Upload request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetPhotoUploadURLRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetPhotoUploadURLResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Validation error (photo type or content type)",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the current authenticated user's profile information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user profile",
                "responses": {
                    "200": {
                        "description": "Profile data with user information",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetProfileResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update profile fields like nickname, born_at, and address. Email/phone/password have dedicated flows.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update user profile (non-sensitive fields)",
                "parameters": [
                    {
                        "description": "Update profile payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UpdateProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile updated",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UpdateProfileResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/role/alternative": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Allows owners to request a realtor role (pending CRECI validation) and vice versa. CRECI fields are optional, but when provided: creciNumber must end with \"-F\", and creciState must be a valid Brazilian state abbreviation (2 letters).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create an alternative role for the authenticated user (owner ↔ realtor)",
                "parameters": [
                    {
                        "description": "Payload containing CRECI data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AddAlternativeUserRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AddAlternativeUserRoleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/role/switch": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Allows users who have both owner and realtor roles to switch between them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Switch the authenticated user's active role (owner ↔ realtor)",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.SwitchUserRoleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/signout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Sign out the current user. If refreshToken or deviceToken is provided, revokes a single session/device and removes associated push tokens. Provide X-Device-Id when targeting a specific device.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Sign out user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device ID (UUIDv4). Recommended for targeted signout so device tokens are purged",
                        "name": "X-Device-Id",
                        "in": "header"
                    },
                    {
                        "description": "Sign out request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.SignOutRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sign out confirmation message",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.SignOutResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/status": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns the status of the currently active user role. Absence of an active role is treated as internal inconsistency.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get active user role status",
                "responses": {
                    "200": {
                        "description": "Active role status (status campo inteiro enum ver comentários DTO)",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UserStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.APIResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {},
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AddAlternativeUserRoleRequest": {
            "type": "object",
            "properties": {
                "creciNumber": {
                    "type": "string",
                    "example": "12345-F"
                },
                "creciState": {
                    "type": "string",
                    "example": "SP"
                },
                "creciValidity": {
                    "type": "string",
                    "example": "2026-12-31"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AddAlternativeUserRoleResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminApproveUserRequest": {
            "type": "object",
            "required": [
                "id",
                "status"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "minimum": 1
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminApproveUserResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminCreateComplexRequest": {
            "type": "object",
            "required": [
                "city",
                "name",
                "number",
                "propertyType",
                "sector",
                "state",
                "zipCode"
            ],
            "properties": {
                "city": {
                    "type": "string"
                },
                "mainRegistration": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "neighborhood": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "propertyType": {
                    "type": "integer"
                },
                "sector": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "zipCode": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminCreateComplexSizeRequest": {
            "type": "object",
            "required": [
                "complexId",
                "size"
            ],
            "properties": {
                "complexId": {
                    "type": "integer",
                    "minimum": 1
                },
                "description": {
                    "type": "string"
                },
                "size": {
                    "type": "number"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminCreateComplexTowerRequest": {
            "type": "object",
            "required": [
                "complexId",
                "tower"
            ],
            "properties": {
                "complexId": {
                    "type": "integer",
                    "minimum": 1
                },
                "floors": {
                    "type": "integer"
                },
                "totalUnits": {
                    "type": "integer"
                },
                "tower": {
                    "type": "string"
                },
                "unitsPerFloor": {
                    "type": "integer"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminCreateComplexZipCodeRequest": {
            "type": "object",
            "required": [
                "complexId",
                "zipCode"
            ],
            "properties": {
                "complexId": {
                    "type": "integer",
                    "minimum": 1
                },
                "zipCode": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminCreatePermissionRequest": {
            "type": "object",
            "required": [
                "action",
                "name",
                "resource"
            ],
            "properties": {
                "action": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "conditions": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                },
                "resource": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminCreateRolePermissionRequest": {
            "type": "object",
            "required": [
                "permissionId",
                "roleId"
            ],
            "properties": {
                "conditions": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "granted": {
                    "type": "boolean"
                },
                "permissionId": {
                    "type": "integer",
                    "minimum": 1
                },
                "roleId": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminCreateRoleRequest": {
            "type": "object",
            "required": [
                "name",
                "slug"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "isSystemRole": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminCreateSystemUserRequest": {
            "type": "object",
            "required": [
                "bornAt",
                "cpf",
                "email",
                "fullName",
                "phoneNumber",
                "roleSlug"
            ],
            "properties": {
                "bornAt": {
                    "type": "string"
                },
                "cpf": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 2
                },
                "phoneNumber": {
                    "type": "string"
                },
                "roleSlug": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminCreciDocumentURLs": {
            "type": "object",
            "properties": {
                "back": {
                    "type": "string"
                },
                "front": {
                    "type": "string"
                },
                "selfie": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminCreciDownloadURLRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminCreciDownloadURLResponse": {
            "type": "object",
            "properties": {
                "expiresInMinutes": {
                    "type": "integer"
                },
                "urls": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminCreciDocumentURLs"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminDeleteComplexRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminDeleteComplexSizeRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminDeleteComplexTowerRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminDeleteComplexZipCodeRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminDeletePermissionRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminDeleteRolePermissionRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminDeleteRoleRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminDeleteSystemUserRequest": {
            "type": "object",
            "required": [
                "userId"
            ],
            "properties": {
                "userId": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminGetComplexDetailRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminGetComplexSizeDetailRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminGetComplexTowerDetailRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminGetComplexZipCodeDetailRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminGetListingCatalogDetailRequest": {
            "type": "object",
            "required": [
                "category",
                "id"
            ],
            "properties": {
                "category": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "maximum": 255,
                    "minimum": 1
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminGetPendingRealtorsResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.PaginationResponse"
                },
                "realtors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminPendingRealtor"
                    }
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminGetPermissionDetailRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminGetRoleDetailRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminGetRolePermissionDetailRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminGetUserRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminGetUserResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UserResponse"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminListComplexSizesResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "sizes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ComplexSizeResponse"
                    }
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminListComplexTowersResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "towers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ComplexTowerResponse"
                    }
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminListComplexZipCodesResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "zipCodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ComplexZipCodeResponse"
                    }
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminListComplexesResponse": {
            "type": "object",
            "properties": {
                "complexes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ComplexResponse"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminListPermissionsResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.PaginationResponse"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminPermissionSummary"
                    }
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminListRolePermissionsResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.PaginationResponse"
                },
                "rolePermissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminRolePermissionSummary"
                    }
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminListRolesResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.PaginationResponse"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminRoleSummary"
                    }
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminListUsersResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.PaginationResponse"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminUserSummary"
                    }
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminPendingRealtor": {
            "type": "object",
            "properties": {
                "creciNumber": {
                    "type": "string"
                },
                "creciState": {
                    "type": "string"
                },
                "creciValidity": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nationalID": {
                    "type": "string"
                },
                "nickName": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminPermissionResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminPermissionSummary": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "conditions": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isActive": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "resource": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminRestoreRoleRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminRolePermissionResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminRolePermissionSummary": {
            "type": "object",
            "properties": {
                "conditions": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "granted": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "permissionId": {
                    "type": "integer"
                },
                "roleId": {
                    "type": "integer"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminRoleResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminRoleSummary": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isActive": {
                    "type": "boolean"
                },
                "isSystemRole": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminSystemUserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "roleSlug": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminUpdateComplexRequest": {
            "type": "object",
            "required": [
                "city",
                "id",
                "name",
                "number",
                "propertyType",
                "sector",
                "state",
                "zipCode"
            ],
            "properties": {
                "city": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "minimum": 1
                },
                "mainRegistration": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "neighborhood": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "propertyType": {
                    "type": "integer"
                },
                "sector": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "zipCode": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminUpdateComplexSizeRequest": {
            "type": "object",
            "required": [
                "complexId",
                "id",
                "size"
            ],
            "properties": {
                "complexId": {
                    "type": "integer",
                    "minimum": 1
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "minimum": 1
                },
                "size": {
                    "type": "number"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminUpdateComplexTowerRequest": {
            "type": "object",
            "required": [
                "complexId",
                "id",
                "tower"
            ],
            "properties": {
                "complexId": {
                    "type": "integer",
                    "minimum": 1
                },
                "floors": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer",
                    "minimum": 1
                },
                "totalUnits": {
                    "type": "integer"
                },
                "tower": {
                    "type": "string"
                },
                "unitsPerFloor": {
                    "type": "integer"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminUpdateComplexZipCodeRequest": {
            "type": "object",
            "required": [
                "complexId",
                "id",
                "zipCode"
            ],
            "properties": {
                "complexId": {
                    "type": "integer",
                    "minimum": 1
                },
                "id": {
                    "type": "integer",
                    "minimum": 1
                },
                "zipCode": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminUpdatePermissionRequest": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "conditions": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "minimum": 1
                },
                "isActive": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminUpdateRolePermissionRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "conditions": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "granted": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminUpdateRoleRequest": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "minimum": 1
                },
                "isActive": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminUpdateSystemUserRequest": {
            "type": "object",
            "required": [
                "email",
                "fullName",
                "phoneNumber",
                "userId"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 2
                },
                "phoneNumber": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminUserRoleResume": {
            "type": "object",
            "properties": {
                "isActive": {
                    "type": "boolean"
                },
                "isSystemRole": {
                    "type": "boolean"
                },
                "roleId": {
                    "type": "integer"
                },
                "roleName": {
                    "type": "string"
                },
                "roleSlug": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "userRoleId": {
                    "type": "integer"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminUserSummary": {
            "type": "object",
            "properties": {
                "cpf": {
                    "type": "string"
                },
                "deleted": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminUserRoleResume"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.BaseFeature": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CEPValidationResponse": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "example": "São Paulo"
                },
                "complement": {
                    "type": "string",
                    "example": "Apto 101"
                },
                "neighborhood": {
                    "type": "string",
                    "example": "Bela Vista"
                },
                "state": {
                    "type": "string",
                    "example": "SP"
                },
                "street": {
                    "type": "string",
                    "example": "Av. Paulista"
                },
                "valid": {
                    "type": "boolean",
                    "example": true
                },
                "zipCode": {
                    "type": "string",
                    "example": "06543001"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CancelPhotoSessionRequest": {
            "type": "object",
            "required": [
                "photoSessionId"
            ],
            "properties": {
                "photoSessionId": {
                    "type": "integer",
                    "example": 3003
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CatalogItemResponse": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                },
                "numericValue": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ComplexResponse": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "mainRegistration": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "neighborhood": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "propertyType": {
                    "type": "integer"
                },
                "sector": {
                    "type": "integer"
                },
                "sizes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ComplexSizeResponse"
                    }
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "towers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ComplexTowerResponse"
                    }
                },
                "zipCode": {
                    "type": "string"
                },
                "zipCodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ComplexZipCodeResponse"
                    }
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ComplexSizeResponse": {
            "type": "object",
            "properties": {
                "complexId": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "size": {
                    "type": "number"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ComplexTowerResponse": {
            "type": "object",
            "properties": {
                "complexId": {
                    "type": "integer"
                },
                "floors": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "totalUnits": {
                    "type": "integer"
                },
                "tower": {
                    "type": "string"
                },
                "unitsPerFloor": {
                    "type": "integer"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ComplexZipCodeResponse": {
            "type": "object",
            "properties": {
                "complexId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "zipCode": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ConfirmEmailChangeRequest": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ConfirmEmailChangeResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ConfirmPasswordChangeRequest": {
            "type": "object",
            "required": [
                "code",
                "nationalID",
                "newPassword"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "nationalID": {
                    "type": "string"
                },
                "newPassword": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ConfirmPasswordChangeResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ConfirmPhoneChangeRequest": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ConfirmPhoneChangeResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ConfirmPhotoSessionRequest": {
            "type": "object",
            "required": [
                "listingId",
                "reservationToken",
                "slotId"
            ],
            "properties": {
                "listingId": {
                    "type": "integer",
                    "example": 1001
                },
                "reservationToken": {
                    "type": "string",
                    "example": "c36b754f-6c37-4c15-8f25-9d77ddf9bb3e"
                },
                "slotId": {
                    "type": "integer",
                    "example": 2002
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ConfirmPhotoSessionResponse": {
            "type": "object",
            "properties": {
                "photoSessionId": {
                    "type": "integer",
                    "example": 3003
                },
                "scheduledEnd": {
                    "type": "string",
                    "example": "2025-10-24T13:00:00Z"
                },
                "scheduledStart": {
                    "type": "string",
                    "example": "2025-10-24T09:00:00Z"
                },
                "slotId": {
                    "type": "integer",
                    "example": 2002
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CreateAgencyRequest": {
            "type": "object",
            "required": [
                "agency"
            ],
            "properties": {
                "agency": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UserCreateRequest"
                },
                "deviceToken": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CreateAgencyResponse": {
            "type": "object",
            "properties": {
                "tokens": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.TokensResponse"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CreateOwnerRequest": {
            "type": "object",
            "required": [
                "deviceToken",
                "owner"
            ],
            "properties": {
                "deviceToken": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UserCreateRequest"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CreateOwnerResponse": {
            "type": "object",
            "properties": {
                "tokens": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.TokensResponse"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CreateRealtorRequest": {
            "type": "object",
            "required": [
                "deviceToken",
                "realtor"
            ],
            "properties": {
                "deviceToken": {
                    "type": "string"
                },
                "realtor": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UserCreateRequest"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CreateRealtorResponse": {
            "type": "object",
            "properties": {
                "tokens": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.TokensResponse"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.DeleteAccountResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "tokens": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.TokensResponse"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.EndUpdateListingRequest": {
            "type": "object",
            "required": [
                "listingId"
            ],
            "properties": {
                "listingId": {
                    "type": "integer"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.EndUpdateListingResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "details": {
                    "type": "object"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetAllListingsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.PaginationResponse"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetBaseFeaturesResponse": {
            "type": "object",
            "properties": {
                "features": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.BaseFeature"
                    }
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetCreciUploadURLRequest": {
            "type": "object",
            "required": [
                "contentType",
                "documentType"
            ],
            "properties": {
                "contentType": {
                    "description": "Ex: \"image/jpeg\"",
                    "type": "string"
                },
                "documentType": {
                    "description": "\"selfie.jpg\", \"front.jpg\", \"back.jpg\"",
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetCreciUploadURLResponse": {
            "type": "object",
            "properties": {
                "signedUrl": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetListingDetailRequest": {
            "type": "object",
            "required": [
                "listingId"
            ],
            "properties": {
                "listingId": {
                    "type": "integer"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetOptionsRequest": {
            "type": "object",
            "required": [
                "number",
                "zipCode"
            ],
            "properties": {
                "number": {
                    "type": "string"
                },
                "zipCode": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetOptionsResponse": {
            "type": "object",
            "properties": {
                "propertyTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.PropertyTypeOption"
                    }
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetPhotoDownloadURLRequest": {
            "type": "object",
            "required": [
                "variant"
            ],
            "properties": {
                "variant": {
                    "type": "string",
                    "enum": [
                        "original",
                        "small",
                        "medium",
                        "large"
                    ]
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetPhotoDownloadURLResponse": {
            "type": "object",
            "properties": {
                "signedUrl": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetPhotoUploadURLRequest": {
            "type": "object",
            "required": [
                "contentType",
                "variant"
            ],
            "properties": {
                "contentType": {
                    "type": "string"
                },
                "variant": {
                    "type": "string",
                    "enum": [
                        "original",
                        "small",
                        "medium",
                        "large"
                    ]
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetPhotoUploadURLResponse": {
            "type": "object",
            "properties": {
                "signedUrl": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetProfileResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UserResponse"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.HolidayCalendarCreateRequest": {
            "type": "object",
            "required": [
                "name",
                "scope"
            ],
            "properties": {
                "cityIbge": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.HolidayCalendarDateCreateRequest": {
            "type": "object",
            "required": [
                "calendarId",
                "holidayDate",
                "label"
            ],
            "properties": {
                "calendarId": {
                    "type": "integer"
                },
                "holidayDate": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "recurrent": {
                    "type": "boolean"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.HolidayCalendarDateDeleteRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.HolidayCalendarDateResponse": {
            "type": "object",
            "properties": {
                "calendarId": {
                    "type": "integer"
                },
                "holidayDate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                },
                "recurrent": {
                    "type": "boolean"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.HolidayCalendarDatesListResponse": {
            "type": "object",
            "properties": {
                "dates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.HolidayCalendarDateResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.PaginationResponse"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.HolidayCalendarDetailRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.HolidayCalendarResponse": {
            "type": "object",
            "properties": {
                "cityIbge": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isActive": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.HolidayCalendarUpdateRequest": {
            "type": "object",
            "required": [
                "id",
                "name",
                "scope"
            ],
            "properties": {
                "cityIbge": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isActive": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.HolidayCalendarsListResponse": {
            "type": "object",
            "properties": {
                "calendars": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.HolidayCalendarResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.PaginationResponse"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListPhotographerSlotsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.PhotographerSlotResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.PaginationResponse"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListSizesByAddressResponse": {
            "type": "object",
            "properties": {
                "sizes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ComplexSizeResponse"
                    }
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingAgendaDetailRequest": {
            "type": "object",
            "required": [
                "listingId"
            ],
            "properties": {
                "listingId": {
                    "type": "integer"
                },
                "pagination": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.SchedulePaginationRequest"
                },
                "range": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ScheduleRangeRequest"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingAgendaDetailResponse": {
            "type": "object",
            "properties": {
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ScheduleEntryResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.PaginationResponse"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogCreateRequest": {
            "type": "object",
            "required": [
                "category",
                "label",
                "slug"
            ],
            "properties": {
                "category": {
                    "type": "string"
                },
                "description": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-string"
                },
                "isActive": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-bool"
                },
                "label": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogDeleteRequest": {
            "type": "object",
            "required": [
                "category",
                "id"
            ],
            "properties": {
                "category": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogRequest": {
            "type": "object",
            "required": [
                "category"
            ],
            "properties": {
                "category": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogRestoreRequest": {
            "type": "object",
            "required": [
                "category",
                "id"
            ],
            "properties": {
                "category": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogUpdateRequest": {
            "type": "object",
            "required": [
                "category",
                "id"
            ],
            "properties": {
                "category": {
                    "type": "string"
                },
                "description": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-string"
                },
                "id": {
                    "type": "integer",
                    "minimum": 1
                },
                "isActive": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-bool"
                },
                "label": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-string"
                },
                "slug": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogValueResponse": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isActive": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "numericValue": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogValuesResponse": {
            "type": "object",
            "properties": {
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogValueResponse"
                    }
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingDetailResponse": {
            "type": "object",
            "properties": {
                "accompanying": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CatalogItemResponse"
                },
                "annualGroundRent": {
                    "type": "number"
                },
                "annualTax": {
                    "type": "number"
                },
                "buildable": {
                    "type": "number"
                },
                "city": {
                    "type": "string"
                },
                "code": {
                    "type": "integer"
                },
                "complement": {
                    "type": "string"
                },
                "condominium": {
                    "type": "number"
                },
                "corner": {
                    "type": "boolean"
                },
                "deleted": {
                    "type": "boolean"
                },
                "delivered": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CatalogItemResponse"
                },
                "description": {
                    "type": "string"
                },
                "exchange": {
                    "type": "boolean"
                },
                "exchangePercentual": {
                    "type": "number"
                },
                "exchangePlaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingExchangePlaceResponse"
                    }
                },
                "features": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingFeatureResponse"
                    }
                },
                "financing": {
                    "type": "boolean"
                },
                "financingBlockers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingFinancingBlockerResponse"
                    }
                },
                "guarantees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingGuaranteeResponse"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "installment": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CatalogItemResponse"
                },
                "landSize": {
                    "type": "number"
                },
                "neighborhood": {
                    "type": "string"
                },
                "nonBuildable": {
                    "type": "number"
                },
                "number": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CatalogItemResponse"
                },
                "propertyType": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingPropertyTypeResponse"
                },
                "rentNet": {
                    "type": "number"
                },
                "sellNet": {
                    "type": "number"
                },
                "state": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "tenantEmail": {
                    "type": "string"
                },
                "tenantName": {
                    "type": "string"
                },
                "tenantPhone": {
                    "type": "string"
                },
                "transaction": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CatalogItemResponse"
                },
                "userId": {
                    "type": "integer"
                },
                "version": {
                    "type": "integer"
                },
                "visit": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CatalogItemResponse"
                },
                "whoLives": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CatalogItemResponse"
                },
                "zipCode": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingExchangePlaceResponse": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "listingId": {
                    "type": "integer"
                },
                "neighborhood": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingFeatureResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "feature": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingFinancingBlockerResponse": {
            "type": "object",
            "properties": {
                "blocker": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CatalogItemResponse"
                },
                "id": {
                    "type": "integer"
                },
                "listingId": {
                    "type": "integer"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingGuaranteeResponse": {
            "type": "object",
            "properties": {
                "guarantee": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CatalogItemResponse"
                },
                "id": {
                    "type": "integer"
                },
                "listingId": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingPropertyTypeResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                },
                "propertyBit": {
                    "type": "integer"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingResponse": {
            "type": "object",
            "properties": {
                "complexId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "number": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "propertyType": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                },
                "zipCode": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.OwnerAgendaSummaryEntryResponse": {
            "type": "object",
            "properties": {
                "blocking": {
                    "type": "boolean"
                },
                "endsAt": {
                    "type": "string"
                },
                "entryType": {
                    "type": "string"
                },
                "startsAt": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.OwnerAgendaSummaryItemResponse": {
            "type": "object",
            "properties": {
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.OwnerAgendaSummaryEntryResponse"
                    }
                },
                "listingId": {
                    "type": "integer"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.OwnerAgendaSummaryRequest": {
            "type": "object",
            "properties": {
                "listingIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.SchedulePaginationRequest"
                },
                "range": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ScheduleRangeRequest"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.OwnerAgendaSummaryResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.OwnerAgendaSummaryItemResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.PaginationResponse"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.PaginationResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "totalPages": {
                    "type": "integer"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.PhotographerSlotResponse": {
            "type": "object",
            "properties": {
                "period": {
                    "type": "string",
                    "example": "MORNING"
                },
                "photographerUserId": {
                    "type": "integer",
                    "example": 45
                },
                "reservedUntil": {
                    "type": "string",
                    "example": "2025-10-24T12:00:00Z"
                },
                "slotDate": {
                    "type": "string",
                    "example": "2025-10-25"
                },
                "slotId": {
                    "type": "integer",
                    "example": 123
                },
                "status": {
                    "type": "string",
                    "example": "AVAILABLE"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.PropertyTypeOption": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "propertyType": {
                    "type": "integer"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.RefreshTokenRequest": {
            "type": "object",
            "required": [
                "refreshToken"
            ],
            "properties": {
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.RefreshTokenResponse": {
            "type": "object",
            "properties": {
                "tokens": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.TokensResponse"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.RequestEmailChangeRequest": {
            "type": "object",
            "required": [
                "newEmail"
            ],
            "properties": {
                "newEmail": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.RequestEmailChangeResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.RequestPasswordChangeRequest": {
            "type": "object",
            "required": [
                "nationalID"
            ],
            "properties": {
                "nationalID": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.RequestPasswordChangeResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.RequestPhoneChangeRequest": {
            "type": "object",
            "required": [
                "newPhoneNumber"
            ],
            "properties": {
                "newPhoneNumber": {
                    "type": "string",
                    "example": "+5511999999999"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.RequestPhoneChangeResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ResendEmailChangeCodeResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ResendPhoneChangeCodeResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ReservePhotoSessionRequest": {
            "type": "object",
            "required": [
                "listingId",
                "slotId"
            ],
            "properties": {
                "listingId": {
                    "type": "integer",
                    "example": 1001
                },
                "slotId": {
                    "type": "integer",
                    "example": 2002
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ReservePhotoSessionResponse": {
            "type": "object",
            "properties": {
                "expiresAt": {
                    "type": "string",
                    "example": "2025-10-24T14:45:00Z"
                },
                "reservationToken": {
                    "type": "string",
                    "example": "c36b754f-6c37-4c15-8f25-9d77ddf9bb3e"
                },
                "slotId": {
                    "type": "integer",
                    "example": 2002
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ScheduleAvailabilityRequest": {
            "type": "object",
            "required": [
                "listingId"
            ],
            "properties": {
                "listingId": {
                    "type": "integer"
                },
                "pagination": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.SchedulePaginationRequest"
                },
                "range": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ScheduleRangeRequest"
                },
                "slotDurationMinute": {
                    "type": "integer"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ScheduleAvailabilityResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.PaginationResponse"
                },
                "slots": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ScheduleAvailabilitySlotResponse"
                    }
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ScheduleAvailabilitySlotResponse": {
            "type": "object",
            "properties": {
                "endsAt": {
                    "type": "string"
                },
                "startsAt": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ScheduleBlockEntryRequest": {
            "type": "object",
            "required": [
                "endsAt",
                "entryType",
                "listingId",
                "startsAt"
            ],
            "properties": {
                "endsAt": {
                    "type": "string"
                },
                "entryType": {
                    "type": "string"
                },
                "listingId": {
                    "type": "integer"
                },
                "reason": {
                    "type": "string"
                },
                "startsAt": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ScheduleBlockEntryResponse": {
            "type": "object",
            "properties": {
                "entry": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ScheduleEntryResponse"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ScheduleBlockEntryUpdateRequest": {
            "type": "object",
            "required": [
                "endsAt",
                "entryId",
                "entryType",
                "listingId",
                "startsAt"
            ],
            "properties": {
                "endsAt": {
                    "type": "string"
                },
                "entryId": {
                    "type": "integer"
                },
                "entryType": {
                    "type": "string"
                },
                "listingId": {
                    "type": "integer"
                },
                "reason": {
                    "type": "string"
                },
                "startsAt": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ScheduleDeleteEntryRequest": {
            "type": "object",
            "required": [
                "entryId",
                "listingId"
            ],
            "properties": {
                "entryId": {
                    "type": "integer"
                },
                "listingId": {
                    "type": "integer"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ScheduleEntryResponse": {
            "type": "object",
            "properties": {
                "blocking": {
                    "type": "boolean"
                },
                "endsAt": {
                    "type": "string"
                },
                "entryType": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "photoBookingId": {
                    "type": "integer"
                },
                "reason": {
                    "type": "string"
                },
                "startsAt": {
                    "type": "string"
                },
                "visitId": {
                    "type": "integer"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.SchedulePaginationRequest": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer",
                    "example": 20
                },
                "page": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ScheduleRangeRequest": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string",
                    "example": "2025-01-01T00:00:00Z"
                },
                "to": {
                    "type": "string",
                    "example": "2025-01-07T23:59:59Z"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.SignInRequest": {
            "type": "object",
            "required": [
                "deviceToken",
                "nationalID",
                "password"
            ],
            "properties": {
                "deviceToken": {
                    "type": "string",
                    "example": "fcm_device_token"
                },
                "nationalID": {
                    "type": "string",
                    "example": "12345678901"
                },
                "password": {
                    "type": "string",
                    "example": "securePassword123"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.SignInResponse": {
            "type": "object",
            "properties": {
                "tokens": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.TokensResponse"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.SignOutRequest": {
            "type": "object",
            "properties": {
                "deviceToken": {
                    "type": "string",
                    "example": "fcm_device_token"
                },
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.SignOutResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.StartListingRequest": {
            "type": "object",
            "required": [
                "city",
                "number",
                "propertyType",
                "state",
                "street",
                "zipCode"
            ],
            "properties": {
                "city": {
                    "type": "string"
                },
                "complement": {
                    "type": "string"
                },
                "neighborhood": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "propertyType": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "zipCode": {
                    "type": "string",
                    "example": "06543001"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.StartListingResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.SwitchUserRoleResponse": {
            "type": "object",
            "properties": {
                "tokens": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.TokensResponse"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.TokensResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UpdateListingRequest": {
            "type": "object",
            "properties": {
                "accompanying": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-string"
                },
                "annualGroundRent": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-float64"
                },
                "annualTax": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-float64"
                },
                "buildable": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-float64"
                },
                "condominium": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-float64"
                },
                "corner": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-bool"
                },
                "delivered": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-string"
                },
                "description": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-string"
                },
                "exchange": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-bool"
                },
                "exchangePercentual": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-float64"
                },
                "exchangePlaces": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-array_github_com_projeto-toq_toq_server_internal_adapter_left_http_dto_UpdateListingExchangePlaceRequest"
                },
                "features": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-array_github_com_projeto-toq_toq_server_internal_adapter_left_http_dto_UpdateListingFeatureRequest"
                },
                "financing": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-bool"
                },
                "financingBlockers": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-array_string"
                },
                "guarantees": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-array_github_com_projeto-toq_toq_server_internal_adapter_left_http_dto_UpdateListingGuaranteeRequest"
                },
                "id": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-int64"
                },
                "installment": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-string"
                },
                "landSize": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-float64"
                },
                "nonBuildable": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-float64"
                },
                "owner": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-string"
                },
                "rentNet": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-float64"
                },
                "sellNet": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-float64"
                },
                "tenantEmail": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-string"
                },
                "tenantName": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-string"
                },
                "tenantPhone": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-string"
                },
                "transaction": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-string"
                },
                "visit": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-string"
                },
                "whoLives": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UpdateListingResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UpdateOptStatusRequest": {
            "type": "object",
            "properties": {
                "optIn": {
                    "type": "boolean"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UpdateOptStatusResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UpdateProfileRequest": {
            "type": "object",
            "required": [
                "user"
            ],
            "properties": {
                "user": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UpdateUserRequest"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UpdateProfileResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "bornAt": {
                    "description": "format: 2006-01-02",
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "complement": {
                    "type": "string"
                },
                "neighborhood": {
                    "type": "string"
                },
                "nickName": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 2
                },
                "number": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "zipCode": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UserCreateRequest": {
            "type": "object",
            "required": [
                "bornAt",
                "email",
                "nationalID",
                "nickName",
                "password",
                "phoneNumber",
                "zipCode"
            ],
            "properties": {
                "bornAt": {
                    "description": "format: 2006-01-02",
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "complement": {
                    "type": "string"
                },
                "creciNumber": {
                    "type": "string",
                    "example": "12345-F"
                },
                "creciState": {
                    "type": "string",
                    "example": "SP"
                },
                "creciValidity": {
                    "description": "format: 2006-01-02",
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                },
                "nationalID": {
                    "type": "string"
                },
                "neighborhood": {
                    "type": "string"
                },
                "nickName": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "number": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "phoneNumber": {
                    "type": "string",
                    "example": "+5511999999999"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "zipCode": {
                    "type": "string",
                    "example": "06543001"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UserResponse": {
            "type": "object",
            "properties": {
                "activeRole": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UserRoleResponse"
                },
                "bornAt": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "complement": {
                    "type": "string"
                },
                "creciNumber": {
                    "type": "string"
                },
                "creciState": {
                    "type": "string"
                },
                "creciValidity": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastActivity": {
                    "type": "string"
                },
                "nationalID": {
                    "type": "string"
                },
                "neighborhood": {
                    "type": "string"
                },
                "nickName": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "zipCode": {
                    "type": "string"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UserRoleResponse": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "baseRoleId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "statusReason": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UserStatusData": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer",
                    "example": 0
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UserStatusResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UserStatusData"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ValidateCEPRequest": {
            "type": "object",
            "required": [
                "hmac",
                "timestamp",
                "zipCode"
            ],
            "properties": {
                "hmac": {
                    "type": "string",
                    "example": "a1b2c3"
                },
                "timestamp": {
                    "type": "integer",
                    "example": 1712345678
                },
                "zipCode": {
                    "type": "string",
                    "example": "06543001"
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ValidateCNPJRequest": {
            "type": "object",
            "required": [
                "hmac",
                "nationalID",
                "timestamp"
            ],
            "properties": {
                "hmac": {
                    "type": "string",
                    "example": "a1b2c3"
                },
                "nationalID": {
                    "type": "string",
                    "example": "12345678000195"
                },
                "timestamp": {
                    "type": "integer",
                    "example": 1712345678
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ValidateCPFRequest": {
            "description": "Assinatura da requisição deve ser calculada com METHOD|PATH|timestamp|payload_compacto_sem_campo_hmac",
            "type": "object",
            "required": [
                "bornAt",
                "hmac",
                "nationalID",
                "timestamp"
            ],
            "properties": {
                "bornAt": {
                    "type": "string",
                    "example": "1990-01-01"
                },
                "hmac": {
                    "type": "string",
                    "example": "a1b2c3"
                },
                "nationalID": {
                    "type": "string",
                    "example": "12345678901"
                },
                "timestamp": {
                    "type": "integer",
                    "example": 1712345678
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ValidationResultResponse": {
            "type": "object",
            "properties": {
                "valid": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "github_com_projeto-toq_toq_server_internal_core_utils.Optional-array_github_com_projeto-toq_toq_server_internal_adapter_left_http_dto_UpdateListingExchangePlaceRequest": {
            "type": "object"
        },
        "github_com_projeto-toq_toq_server_internal_core_utils.Optional-array_github_com_projeto-toq_toq_server_internal_adapter_left_http_dto_UpdateListingFeatureRequest": {
            "type": "object"
        },
        "github_com_projeto-toq_toq_server_internal_core_utils.Optional-array_github_com_projeto-toq_toq_server_internal_adapter_left_http_dto_UpdateListingGuaranteeRequest": {
            "type": "object"
        },
        "github_com_projeto-toq_toq_server_internal_core_utils.Optional-array_string": {
            "type": "object"
        },
        "github_com_projeto-toq_toq_server_internal_core_utils.Optional-bool": {
            "type": "object"
        },
        "github_com_projeto-toq_toq_server_internal_core_utils.Optional-float64": {
            "type": "object"
        },
        "github_com_projeto-toq_toq_server_internal_core_utils.Optional-int64": {
            "type": "object"
        },
        "github_com_projeto-toq_toq_server_internal_core_utils.Optional-string": {
            "type": "object"
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}