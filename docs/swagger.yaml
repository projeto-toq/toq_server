basePath: /api/v2
definitions:
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ActiveRoleDTO:
    properties:
      active:
        type: boolean
      id:
        type: integer
      role:
        $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.RoleDTO'
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.BaseFeature:
    properties:
      category:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ConfirmEmailChangeRequest:
    properties:
      code:
        type: string
    required:
    - code
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ConfirmEmailChangeResponse:
    properties:
      message:
        type: string
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ConfirmPasswordChangeRequest:
    properties:
      code:
        type: string
      nationalID:
        type: string
      newPassword:
        minLength: 6
        type: string
    required:
    - code
    - nationalID
    - newPassword
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ConfirmPasswordChangeResponse:
    properties:
      message:
        type: string
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ConfirmPhoneChangeRequest:
    properties:
      code:
        type: string
    required:
    - code
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ConfirmPhoneChangeResponse:
    properties:
      message:
        type: string
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.CreateAgencyRequest:
    properties:
      agency:
        $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.UserCreateRequest'
      deviceToken:
        type: string
    required:
    - agency
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.CreateAgencyResponse:
    properties:
      tokens:
        $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.TokensResponse'
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.CreateOwnerRequest:
    properties:
      deviceToken:
        type: string
      owner:
        $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.UserCreateRequest'
    required:
    - owner
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.CreateOwnerResponse:
    properties:
      tokens:
        $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.TokensResponse'
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.CreateRealtorRequest:
    properties:
      deviceToken:
        type: string
      realtor:
        $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.UserCreateRequest'
    required:
    - realtor
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.CreateRealtorResponse:
    properties:
      tokens:
        $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.TokensResponse'
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.DeleteAccountResponse:
    properties:
      message:
        type: string
      tokens:
        $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.TokensResponse'
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse:
    properties:
      code:
        type: integer
      details:
        type: object
      message:
        type: string
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.GetAllListingsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ListingResponse'
        type: array
      pagination:
        $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.PaginationResponse'
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.GetBaseFeaturesResponse:
    properties:
      features:
        items:
          $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.BaseFeature'
        type: array
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.GetCreciUploadURLRequest:
    properties:
      contentType:
        description: 'Ex: "image/jpeg"'
        type: string
      documentType:
        description: '"selfie.jpg", "front.jpg", "back.jpg"'
        type: string
    required:
    - contentType
    - documentType
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.GetCreciUploadURLResponse:
    properties:
      signedUrl:
        type: string
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.GetOptionsResponse:
    properties:
      propertyTypes:
        items:
          $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.PropertyTypeOption'
        type: array
      statuses:
        items:
          $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.StatusOption'
        type: array
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.GetPhotoUploadURLRequest:
    properties:
      contentType:
        type: string
      objectName:
        type: string
    required:
    - contentType
    - objectName
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.GetPhotoUploadURLResponse:
    properties:
      signedUrl:
        type: string
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.GetProfileThumbnailsResponse:
    properties:
      largeUrl:
        type: string
      mediumUrl:
        type: string
      originalUrl:
        type: string
      smallUrl:
        type: string
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ListingResponse:
    properties:
      complexId:
        type: string
      createdAt:
        type: string
      description:
        type: string
      id:
        type: integer
      number:
        type: string
      price:
        type: number
      propertyType:
        type: integer
      status:
        type: string
      title:
        type: string
      updatedAt:
        type: string
      userId:
        type: integer
      zipCode:
        type: string
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.PaginationResponse:
    properties:
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
      totalPages:
        type: integer
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.PropertyTypeOption:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.RefreshTokenRequest:
    properties:
      refreshToken:
        type: string
    required:
    - refreshToken
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.RefreshTokenResponse:
    properties:
      tokens:
        $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.TokensResponse'
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.RequestEmailChangeRequest:
    properties:
      newEmail:
        type: string
    required:
    - newEmail
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.RequestEmailChangeResponse:
    properties:
      message:
        type: string
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.RequestPasswordChangeRequest:
    properties:
      nationalID:
        type: string
    required:
    - nationalID
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.RequestPasswordChangeResponse:
    properties:
      message:
        type: string
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.RequestPhoneChangeRequest:
    properties:
      newPhoneNumber:
        type: string
    required:
    - newPhoneNumber
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.RequestPhoneChangeResponse:
    properties:
      message:
        type: string
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ResendEmailChangeCodeResponse:
    properties:
      message:
        type: string
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ResendPhoneChangeCodeResponse:
    properties:
      message:
        type: string
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.RoleDTO:
    properties:
      description:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_system_role:
        type: boolean
      name:
        type: string
      slug:
        type: string
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.SignInRequest:
    properties:
      deviceToken:
        example: fcm_device_token
        type: string
      nationalID:
        example: "12345678901"
        type: string
      password:
        example: securePassword123
        type: string
    required:
    - nationalID
    - password
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.SignInResponse:
    properties:
      tokens:
        $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.TokensResponse'
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.SignOutRequest:
    properties:
      deviceToken:
        type: string
      refreshToken:
        type: string
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.SignOutResponse:
    properties:
      message:
        type: string
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.StartListingRequest:
    properties:
      number:
        type: string
      propertyType:
        type: integer
      zipCode:
        type: string
    required:
    - number
    - propertyType
    - zipCode
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.StartListingResponse:
    properties:
      id:
        type: integer
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.StatusOption:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.TokensResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.UpdateOptStatusRequest:
    properties:
      optIn:
        type: boolean
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.UpdateOptStatusResponse:
    properties:
      message:
        type: string
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.UpdateProfileRequest:
    properties:
      user:
        $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.UpdateUserRequest'
    required:
    - user
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.UpdateProfileResponse:
    properties:
      message:
        type: string
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.UpdateUserRequest:
    properties:
      bornAt:
        description: 'format: 2006-01-02'
        type: string
      city:
        type: string
      complement:
        type: string
      neighborhood:
        type: string
      nickName:
        maxLength: 50
        minLength: 2
        type: string
      number:
        type: string
      state:
        type: string
      street:
        type: string
      zipCode:
        type: string
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.UserCreateRequest:
    properties:
      bornAt:
        description: 'format: 2006-01-02'
        type: string
      city:
        type: string
      complement:
        type: string
      creciNumber:
        type: string
      creciState:
        type: string
      creciValidity:
        description: 'format: 2006-01-02'
        type: string
      email:
        type: string
      fullName:
        maxLength: 100
        minLength: 2
        type: string
      nationalID:
        type: string
      neighborhood:
        type: string
      nickName:
        maxLength: 50
        minLength: 2
        type: string
      number:
        type: string
      password:
        minLength: 6
        type: string
      phoneNumber:
        type: string
      state:
        type: string
      street:
        type: string
      zipCode:
        type: string
    required:
    - bornAt
    - email
    - nationalID
    - nickName
    - password
    - phoneNumber
    - zipCode
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.UserProfileData:
    properties:
      active_role:
        $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ActiveRoleDTO'
      born_at:
        type: string
      city:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: integer
      national_id:
        type: string
      nick_name:
        type: string
      phone_number:
        type: string
      state:
        type: string
      street:
        type: string
      zip_code:
        type: string
    type: object
  github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.UserProfileResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.UserProfileData'
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: support@toq.com
    name: TOQ Development Team
    url: https://github.com/giulio-alfieri/toq_server
  description: TOQ Server - Real Estate HTTP API Server with hexagonal architecture
  license:
    name: MIT
    url: https://github.com/giulio-alfieri/toq_server/blob/main/LICENSE
  termsOfService: http://swagger.io/terms/
  title: TOQ Server API
  version: "1.0"
paths:
  /auth/agency:
    post:
      consumes:
      - application/json
      description: Create a new agency account with user information
      parameters:
      - description: Agency creation data (include optional deviceToken for push notifications)
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.CreateAgencyRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.CreateAgencyResponse'
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "409":
          description: User already exists
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "422":
          description: Validation failed
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      summary: Create agency account
      tags:
      - Authentication
  /auth/owner:
    post:
      consumes:
      - application/json
      description: Create a new owner account with user information
      parameters:
      - description: Owner creation data (include optional deviceToken for push notifications)
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.CreateOwnerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.CreateOwnerResponse'
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "409":
          description: User already exists
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "422":
          description: Validation failed
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      summary: Create owner account
      tags:
      - Authentication
  /auth/password/confirm:
    post:
      consumes:
      - application/json
      description: Confirm password change using verification code
      parameters:
      - description: Password change confirmation data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ConfirmPasswordChangeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ConfirmPasswordChangeResponse'
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "409":
          description: Password change not pending
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "410":
          description: Verification code expired
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "422":
          description: Invalid verification code or password validation failed
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      summary: Confirm password change
      tags:
      - Authentication
  /auth/password/request:
    post:
      consumes:
      - application/json
      description: Initiate password change process by sending verification code
      parameters:
      - description: Password change request data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.RequestPasswordChangeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.RequestPasswordChangeResponse'
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "429":
          description: Too many requests
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      summary: Request password change
      tags:
      - Authentication
  /auth/realtor:
    post:
      consumes:
      - application/json
      description: Create a new realtor account with user and CRECI information
      parameters:
      - description: Realtor creation data (include optional deviceToken for push
          notifications)
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.CreateRealtorRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.CreateRealtorResponse'
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "409":
          description: User already exists
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "422":
          description: Validation failed
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      summary: Create realtor account
      tags:
      - Authentication
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Generate new access token using refresh token
      parameters:
      - description: Refresh token data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.RefreshTokenResponse'
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Invalid or expired refresh token
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      summary: Refresh access token
      tags:
      - Authentication
  /auth/signin:
    post:
      consumes:
      - application/json
      description: Authenticate user with national ID and password. When sending a
        deviceToken, provide X-Device-Id (UUIDv4) for per-device associations.
      parameters:
      - description: Device ID (UUIDv4). Required when request contains deviceToken.
        in: header
        name: X-Device-Id
        type: string
      - description: Sign in credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.SignInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successful authentication
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.SignInResponse'
        "400":
          description: Invalid request format or missing/invalid device ID when deviceToken
            provided
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "403":
          description: No active user roles
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "423":
          description: Account temporarily locked due to security measures
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "429":
          description: Too many attempts
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      summary: User sign in
      tags:
      - Authentication
  /listings:
    get:
      consumes:
      - application/json
      description: Get all listings with optional filters for status, location, price
        range, etc.
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        minimum: 1
        name: page
        type: integer
      - description: 'Items per page (default: 10)'
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      - description: Filter by listing status
        in: query
        name: status
        type: string
      - description: Filter by user ID
        in: query
        name: userId
        type: string
      - description: Filter by zip code
        in: query
        name: zipCode
        type: string
      - description: Minimum price filter
        in: query
        name: minPrice
        type: integer
      - description: Maximum price filter
        in: query
        name: maxPrice
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.GetAllListingsResponse'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "501":
          description: Service method not implemented
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get all listings with pagination and filters
      tags:
      - Listings
    post:
      consumes:
      - application/json
      description: Create a new listing with basic information (zip code, number,
        property type)
      parameters:
      - description: Listing creation data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.StartListingRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.StartListingResponse'
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Start a new listing
      tags:
      - Listings
  /listings/features/base:
    get:
      consumes:
      - application/json
      description: Get all available base features that can be associated with listings
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.GetBaseFeaturesResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get base features
      tags:
      - Listings
  /listings/options:
    get:
      consumes:
      - application/json
      description: Get available property types and statuses for listings based on
        location
      parameters:
      - description: Zip code for location-based options
        in: query
        name: zipCode
        required: true
        type: string
      - description: Property number
        in: query
        name: number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.GetOptionsResponse'
        "400":
          description: Missing required parameters
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get listing options
      tags:
      - Listings
  /realtor/creci/upload-url:
    post:
      consumes:
      - application/json
      description: Generate a pre-signed URL to upload a CRECI document (selfie/front/back)
      parameters:
      - description: Upload request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.GetCreciUploadURLRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.GetCreciUploadURLResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "422":
          description: Validation error (document type or content type)
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get pre-signed upload URL for CRECI documents
      tags:
      - Realtor
  /realtor/creci/verify:
    post:
      consumes:
      - application/json
      description: Check if selfie.jpg, front.jpg and back.jpg exist in the user's
        S3 folder; if all exist, set status to PendingManual
      produces:
      - application/json
      responses:
        "200":
          description: verification accepted
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "422":
          description: Missing required documents
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Verify CRECI documents presence
      tags:
      - Realtor
  /user/account:
    delete:
      consumes:
      - application/json
      description: Permanently delete the current user's account. Revokes all sessions,
        removes device tokens, masks PII, and detaches roles.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.DeleteAccountResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete account
      tags:
      - User
  /user/email/confirm:
    post:
      consumes:
      - application/json
      description: Confirm email change by providing the received validation code
      parameters:
      - description: Confirmation code
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ConfirmEmailChangeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Confirmation message
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ConfirmEmailChangeResponse'
        "400":
          description: Invalid request format or code
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "409":
          description: Email change not pending or already in use
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "410":
          description: Code expired
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "422":
          description: Invalid code
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      summary: Confirm email change
      tags:
      - User
  /user/email/request:
    post:
      consumes:
      - application/json
      description: Start email change by sending a validation code to the new email
        address
      parameters:
      - description: New email
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.RequestEmailChangeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Email change request sent
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.RequestEmailChangeResponse'
        "400":
          description: Invalid request format or email
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "409":
          description: Same as current email (dev-only check disabled)
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      summary: Request email change
      tags:
      - User
  /user/email/resend:
    post:
      description: Resend a new validation code to the pending new email address
      produces:
      - application/json
      responses:
        "200":
          description: Confirmation message
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ResendEmailChangeCodeResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "409":
          description: Email change not pending
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      summary: Resend email change code
      tags:
      - User
  /user/opt-status:
    put:
      consumes:
      - application/json
      description: Update user's consent to receive notifications (opt-in/opt-out)
      parameters:
      - description: Opt-in request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.UpdateOptStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.UpdateOptStatusResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update opt-in status
      tags:
      - User
  /user/phone/confirm:
    post:
      consumes:
      - application/json
      description: Confirm a phone number change using the verification code sent
        to the new phone
      parameters:
      - description: Phone change confirmation data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ConfirmPhoneChangeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ConfirmPhoneChangeResponse'
        "400":
          description: Invalid request format or code
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "409":
          description: Active role missing for user or phone already in use
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "422":
          description: Phone change not pending
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "410":
          description: Invalid or expired validation code
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Confirm phone number change
      tags:
      - User
  /user/phone/request:
    post:
      consumes:
      - application/json
      description: Start a phone change by sending a code to the new phone number
      parameters:
      - description: New phone number (E.164)
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.RequestPhoneChangeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Phone change request sent
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.RequestPhoneChangeResponse'
        "400":
          description: Invalid request format or phone
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "409":
          description: Phone already in use or same as current
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Request phone number change
      tags:
      - User
  /user/phone/resend:
    post:
      description: Resend a new validation code to the pending new phone number
      produces:
      - application/json
      responses:
        "200":
          description: Confirmation message
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ResendPhoneChangeCodeResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "409":
          description: Phone change not pending
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Resend phone change code
      tags:
      - User
  /user/photo/upload-url:
    post:
      consumes:
      - application/json
      description: Generate a pre-signed URL to upload a profile photo to storage
      parameters:
      - description: Upload request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.GetPhotoUploadURLRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.GetPhotoUploadURLResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "422":
          description: Validation error (photo type or content type)
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get pre-signed upload URL for profile photo
      tags:
      - User
  /user/profile:
    get:
      consumes:
      - application/json
      description: Get the current authenticated user's profile information
      produces:
      - application/json
      responses:
        "200":
          description: Profile data with user information
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.UserProfileResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update profile fields like nickname, born_at, and address. Email/phone/password
        have dedicated flows.
      parameters:
      - description: Update profile payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.UpdateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Profile updated
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.UpdateProfileResponse'
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "422":
          description: Validation error
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update user profile (non-sensitive fields)
      tags:
      - User
  /user/profile/thumbnails:
    get:
      description: Returns signed URLs for original, small, medium, and large profile
        photos
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.GetProfileThumbnailsResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get profile photo thumbnails
      tags:
      - User
  /user/signout:
    post:
      consumes:
      - application/json
      description: Sign out the current user. If refreshToken or deviceToken is provided,
        revokes a single session/device; otherwise, global signout. When targeting
        a device without deviceToken, send X-Device-Id.
      parameters:
      - description: Device ID (UUIDv4) for targeted signout when deviceToken isn't
          provided
        in: header
        name: X-Device-Id
        type: string
      - description: Sign out request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.SignOutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Sign out confirmation message
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.SignOutResponse'
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_giulio-alfieri_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Sign out user
      tags:
      - User
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
