basePath: /api/v2
definitions:
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.APIResponse:
    properties:
      data: {}
      error: {}
      message:
        type: string
      success:
        type: boolean
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AddAlternativeUserRoleRequest:
    properties:
      creciNumber:
        example: 12345-F
        type: string
      creciState:
        example: SP
        type: string
      creciValidity:
        example: "2026-12-31"
        type: string
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AddAlternativeUserRoleResponse:
    properties:
      message:
        type: string
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminApproveUserRequest:
    properties:
      id:
        minimum: 1
        type: integer
      status:
        type: integer
    required:
    - id
    - status
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminApproveUserResponse:
    properties:
      message:
        type: string
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminCreateRoleRequest:
    properties:
      description:
        type: string
      isSystemRole:
        type: boolean
      name:
        maxLength: 100
        minLength: 2
        type: string
      slug:
        type: string
    required:
    - name
    - slug
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminCreateSystemUserRequest:
    properties:
      bornAt:
        type: string
      cpf:
        type: string
      email:
        type: string
      fullName:
        maxLength: 150
        minLength: 2
        type: string
      phoneNumber:
        type: string
      roleSlug:
        type: string
    required:
    - bornAt
    - cpf
    - email
    - fullName
    - phoneNumber
    - roleSlug
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminCreciDocumentURLs:
    properties:
      back:
        type: string
      front:
        type: string
      selfie:
        type: string
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminCreciDownloadURLRequest:
    properties:
      id:
        minimum: 1
        type: integer
    required:
    - id
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminCreciDownloadURLResponse:
    properties:
      expiresInMinutes:
        type: integer
      urls:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminCreciDocumentURLs'
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminDeleteRoleRequest:
    properties:
      id:
        minimum: 1
        type: integer
    required:
    - id
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminDeleteSystemUserRequest:
    properties:
      userId:
        minimum: 1
        type: integer
    required:
    - userId
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminGetPendingRealtorsResponse:
    properties:
      realtors:
        items:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminPendingRealtor'
        type: array
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminGetUserRequest:
    properties:
      id:
        minimum: 1
        type: integer
    required:
    - id
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminGetUserResponse:
    properties:
      user:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UserResponse'
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminListRolesResponse:
    properties:
      pagination:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.PaginationResponse'
      roles:
        items:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminRoleSummary'
        type: array
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminListUsersResponse:
    properties:
      pagination:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.PaginationResponse'
      users:
        items:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminUserSummary'
        type: array
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminListingCatalogRequest:
    properties:
      category:
        type: string
      includeInactive:
        type: boolean
    required:
    - category
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminPendingRealtor:
    properties:
      creciNumber:
        type: string
      creciState:
        type: string
      creciValidity:
        type: string
      fullName:
        type: string
      id:
        type: integer
      nationalID:
        type: string
      nickName:
        type: string
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminRestoreRoleRequest:
    properties:
      id:
        minimum: 1
        type: integer
    required:
    - id
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminRoleResponse:
    properties:
      id:
        type: integer
      message:
        type: string
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminRoleSummary:
    properties:
      description:
        type: string
      id:
        type: integer
      isActive:
        type: boolean
      isSystemRole:
        type: boolean
      name:
        type: string
      slug:
        type: string
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminSystemUserResponse:
    properties:
      email:
        type: string
      message:
        type: string
      roleSlug:
        type: string
      userId:
        type: integer
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminUpdateRoleRequest:
    properties:
      description:
        type: string
      id:
        minimum: 1
        type: integer
      isActive:
        type: boolean
      name:
        maxLength: 100
        minLength: 2
        type: string
    required:
    - id
    - name
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminUpdateSystemUserRequest:
    properties:
      email:
        type: string
      fullName:
        maxLength: 150
        minLength: 2
        type: string
      phoneNumber:
        type: string
      userId:
        minimum: 1
        type: integer
    required:
    - email
    - fullName
    - phoneNumber
    - userId
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminUserRoleResume:
    properties:
      isActive:
        type: boolean
      isSystemRole:
        type: boolean
      roleId:
        type: integer
      roleName:
        type: string
      roleSlug:
        type: string
      status:
        type: string
      userRoleId:
        type: integer
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminUserSummary:
    properties:
      cpf:
        type: string
      deleted:
        type: boolean
      email:
        type: string
      fullName:
        type: string
      id:
        type: integer
      phoneNumber:
        type: string
      role:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminUserRoleResume'
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.BaseFeature:
    properties:
      category:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CEPValidationResponse:
    properties:
      city:
        example: SÃ£o Paulo
        type: string
      complement:
        example: Apto 101
        type: string
      neighborhood:
        example: Bela Vista
        type: string
      postalCode:
        example: "12345678"
        type: string
      state:
        example: SP
        type: string
      street:
        example: Av. Paulista
        type: string
      valid:
        example: true
        type: boolean
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CancelPhotoSessionRequest:
    properties:
      photoSessionId:
        example: 3003
        type: integer
    required:
    - photoSessionId
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ConfirmEmailChangeRequest:
    properties:
      code:
        type: string
    required:
    - code
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ConfirmEmailChangeResponse:
    properties:
      message:
        type: string
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ConfirmPasswordChangeRequest:
    properties:
      code:
        type: string
      nationalID:
        type: string
      newPassword:
        minLength: 6
        type: string
    required:
    - code
    - nationalID
    - newPassword
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ConfirmPasswordChangeResponse:
    properties:
      message:
        type: string
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ConfirmPhoneChangeRequest:
    properties:
      code:
        type: string
    required:
    - code
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ConfirmPhoneChangeResponse:
    properties:
      message:
        type: string
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ConfirmPhotoSessionRequest:
    properties:
      listingId:
        example: 1001
        type: integer
      reservationToken:
        example: c36b754f-6c37-4c15-8f25-9d77ddf9bb3e
        type: string
      slotId:
        example: 2002
        type: integer
    required:
    - listingId
    - reservationToken
    - slotId
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ConfirmPhotoSessionResponse:
    properties:
      photoSessionId:
        example: 3003
        type: integer
      scheduledEnd:
        example: "2025-10-24T13:00:00Z"
        type: string
      scheduledStart:
        example: "2025-10-24T09:00:00Z"
        type: string
      slotId:
        example: 2002
        type: integer
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CreateAgencyRequest:
    properties:
      agency:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UserCreateRequest'
      deviceToken:
        type: string
    required:
    - agency
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CreateAgencyResponse:
    properties:
      tokens:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.TokensResponse'
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CreateOwnerRequest:
    properties:
      deviceToken:
        type: string
      owner:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UserCreateRequest'
    required:
    - deviceToken
    - owner
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CreateOwnerResponse:
    properties:
      tokens:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.TokensResponse'
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CreateRealtorRequest:
    properties:
      deviceToken:
        type: string
      realtor:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UserCreateRequest'
    required:
    - deviceToken
    - realtor
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CreateRealtorResponse:
    properties:
      tokens:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.TokensResponse'
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.DeleteAccountResponse:
    properties:
      message:
        type: string
      tokens:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.TokensResponse'
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse:
    properties:
      code:
        type: integer
      details:
        type: object
      message:
        type: string
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetAllListingsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingResponse'
        type: array
      pagination:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.PaginationResponse'
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetBaseFeaturesResponse:
    properties:
      features:
        items:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.BaseFeature'
        type: array
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetCreciUploadURLRequest:
    properties:
      contentType:
        description: 'Ex: "image/jpeg"'
        type: string
      documentType:
        description: '"selfie.jpg", "front.jpg", "back.jpg"'
        type: string
    required:
    - contentType
    - documentType
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetCreciUploadURLResponse:
    properties:
      signedUrl:
        type: string
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetOptionsRequest:
    properties:
      number:
        type: string
      zipCode:
        type: string
    required:
    - number
    - zipCode
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetOptionsResponse:
    properties:
      propertyTypes:
        items:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.PropertyTypeOption'
        type: array
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetPhotoDownloadURLRequest:
    properties:
      variant:
        enum:
        - original
        - small
        - medium
        - large
        type: string
    required:
    - variant
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetPhotoDownloadURLResponse:
    properties:
      signedUrl:
        type: string
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetPhotoUploadURLRequest:
    properties:
      contentType:
        type: string
      variant:
        enum:
        - original
        - small
        - medium
        - large
        type: string
    required:
    - contentType
    - variant
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetPhotoUploadURLResponse:
    properties:
      signedUrl:
        type: string
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetProfileResponse:
    properties:
      user:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UserResponse'
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListPhotographerSlotsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.PhotographerSlotResponse'
        type: array
      pagination:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.PaginationResponse'
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogCreateRequest:
    properties:
      category:
        type: string
      description:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-string'
      isActive:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-bool'
      label:
        type: string
      slug:
        type: string
    required:
    - category
    - label
    - slug
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogDeleteRequest:
    properties:
      category:
        type: string
      id:
        minimum: 1
        type: integer
    required:
    - category
    - id
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogRequest:
    properties:
      category:
        type: string
    required:
    - category
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogRestoreRequest:
    properties:
      category:
        type: string
      id:
        minimum: 1
        type: integer
    required:
    - category
    - id
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogUpdateRequest:
    properties:
      category:
        type: string
      description:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-string'
      id:
        minimum: 1
        type: integer
      isActive:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-bool'
      label:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-string'
      slug:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-string'
    required:
    - category
    - id
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogValueResponse:
    properties:
      category:
        type: string
      description:
        type: string
      id:
        type: integer
      isActive:
        type: boolean
      label:
        type: string
      slug:
        type: string
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogValuesResponse:
    properties:
      values:
        items:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogValueResponse'
        type: array
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingResponse:
    properties:
      complexId:
        type: string
      createdAt:
        type: string
      description:
        type: string
      id:
        type: integer
      number:
        type: string
      price:
        type: number
      propertyType:
        type: integer
      status:
        type: string
      title:
        type: string
      updatedAt:
        type: string
      userId:
        type: integer
      zipCode:
        type: string
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.PaginationResponse:
    properties:
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
      totalPages:
        type: integer
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.PhotographerSlotResponse:
    properties:
      period:
        example: MORNING
        type: string
      photographerUserId:
        example: 45
        type: integer
      reservedUntil:
        example: "2025-10-24T12:00:00Z"
        type: string
      slotDate:
        example: "2025-10-25"
        type: string
      slotId:
        example: 123
        type: integer
      status:
        example: AVAILABLE
        type: string
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.PropertyTypeOption:
    properties:
      name:
        type: string
      propertyType:
        type: integer
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.RefreshTokenRequest:
    properties:
      refreshToken:
        type: string
    required:
    - refreshToken
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.RefreshTokenResponse:
    properties:
      tokens:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.TokensResponse'
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.RequestEmailChangeRequest:
    properties:
      newEmail:
        type: string
    required:
    - newEmail
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.RequestEmailChangeResponse:
    properties:
      message:
        type: string
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.RequestPasswordChangeRequest:
    properties:
      nationalID:
        type: string
    required:
    - nationalID
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.RequestPasswordChangeResponse:
    properties:
      message:
        type: string
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.RequestPhoneChangeRequest:
    properties:
      newPhoneNumber:
        example: "+5511999999999"
        type: string
    required:
    - newPhoneNumber
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.RequestPhoneChangeResponse:
    properties:
      message:
        type: string
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ResendEmailChangeCodeResponse:
    properties:
      message:
        type: string
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ResendPhoneChangeCodeResponse:
    properties:
      message:
        type: string
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ReservePhotoSessionRequest:
    properties:
      listingId:
        example: 1001
        type: integer
      slotId:
        example: 2002
        type: integer
    required:
    - listingId
    - slotId
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ReservePhotoSessionResponse:
    properties:
      expiresAt:
        example: "2025-10-24T14:45:00Z"
        type: string
      reservationToken:
        example: c36b754f-6c37-4c15-8f25-9d77ddf9bb3e
        type: string
      slotId:
        example: 2002
        type: integer
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.SignInRequest:
    properties:
      deviceToken:
        example: fcm_device_token
        type: string
      nationalID:
        example: "12345678901"
        type: string
      password:
        example: securePassword123
        type: string
    required:
    - deviceToken
    - nationalID
    - password
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.SignInResponse:
    properties:
      tokens:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.TokensResponse'
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.SignOutRequest:
    properties:
      deviceToken:
        example: fcm_device_token
        type: string
      refreshToken:
        type: string
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.SignOutResponse:
    properties:
      message:
        type: string
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.StartListingRequest:
    properties:
      city:
        type: string
      complement:
        type: string
      neighborhood:
        type: string
      number:
        type: string
      propertyType:
        type: integer
      state:
        type: string
      street:
        type: string
      zipCode:
        type: string
    required:
    - city
    - number
    - propertyType
    - state
    - street
    - zipCode
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.StartListingResponse:
    properties:
      id:
        type: integer
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.SwitchUserRoleResponse:
    properties:
      tokens:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.TokensResponse'
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.TokensResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UpdateListingRequest:
    properties:
      accompanying:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-int'
      annualGroundRent:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-float64'
      annualTax:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-float64'
      buildable:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-float64'
      condominium:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-float64'
      corner:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-bool'
      delivered:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-int'
      description:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-string'
      exchange:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-bool'
      exchangePercentual:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-float64'
      exchangePlaces:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-array_github_com_projeto-toq_toq_server_internal_adapter_left_http_dto_UpdateListingExchangePlaceRequest'
      features:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-array_github_com_projeto-toq_toq_server_internal_adapter_left_http_dto_UpdateListingFeatureRequest'
      financing:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-bool'
      financingBlockers:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-array_int'
      guarantees:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-array_github_com_projeto-toq_toq_server_internal_adapter_left_http_dto_UpdateListingGuaranteeRequest'
      id:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-int64'
      installment:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-int'
      landSize:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-float64'
      nonBuildable:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-float64'
      owner:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-int'
      rentNet:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-float64'
      sellNet:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-float64'
      tenantEmail:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-string'
      tenantName:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-string'
      tenantPhone:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-string'
      transaction:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-int'
      visit:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-int'
      whoLives:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_core_utils.Optional-int'
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UpdateListingResponse:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UpdateOptStatusRequest:
    properties:
      optIn:
        type: boolean
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UpdateOptStatusResponse:
    properties:
      message:
        type: string
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UpdateProfileRequest:
    properties:
      user:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UpdateUserRequest'
    required:
    - user
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UpdateProfileResponse:
    properties:
      message:
        type: string
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UpdateUserRequest:
    properties:
      bornAt:
        description: 'format: 2006-01-02'
        type: string
      city:
        type: string
      complement:
        type: string
      neighborhood:
        type: string
      nickName:
        maxLength: 50
        minLength: 2
        type: string
      number:
        type: string
      state:
        type: string
      street:
        type: string
      zipCode:
        type: string
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UserCreateRequest:
    properties:
      bornAt:
        description: 'format: 2006-01-02'
        type: string
      city:
        type: string
      complement:
        type: string
      creciNumber:
        example: 12345-F
        type: string
      creciState:
        example: SP
        type: string
      creciValidity:
        description: 'format: 2006-01-02'
        type: string
      email:
        type: string
      fullName:
        maxLength: 100
        minLength: 2
        type: string
      nationalID:
        type: string
      neighborhood:
        type: string
      nickName:
        maxLength: 50
        minLength: 3
        type: string
      number:
        type: string
      password:
        minLength: 8
        type: string
      phoneNumber:
        example: "+5511999999999"
        type: string
      state:
        type: string
      street:
        type: string
      zipCode:
        type: string
    required:
    - bornAt
    - email
    - nationalID
    - nickName
    - password
    - phoneNumber
    - zipCode
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UserResponse:
    properties:
      activeRole:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UserRoleResponse'
      bornAt:
        type: string
      city:
        type: string
      complement:
        type: string
      creciNumber:
        type: string
      creciState:
        type: string
      creciValidity:
        type: string
      email:
        type: string
      fullName:
        type: string
      id:
        type: integer
      lastActivity:
        type: string
      nationalID:
        type: string
      neighborhood:
        type: string
      nickName:
        type: string
      number:
        type: string
      phoneNumber:
        type: string
      state:
        type: string
      street:
        type: string
      zipCode:
        type: string
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UserRoleResponse:
    properties:
      active:
        type: boolean
      baseRoleId:
        type: integer
      id:
        type: integer
      role:
        type: string
      status:
        type: string
      statusReason:
        type: string
      userId:
        type: integer
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UserStatusData:
    properties:
      status:
        example: 0
        type: integer
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UserStatusResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UserStatusData'
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ValidateCEPRequest:
    properties:
      hmac:
        example: a1b2c3
        type: string
      postalCode:
        example: "12345678"
        type: string
      timestamp:
        example: 1712345678
        type: integer
    required:
    - hmac
    - postalCode
    - timestamp
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ValidateCNPJRequest:
    properties:
      hmac:
        example: a1b2c3
        type: string
      nationalID:
        example: "12345678000195"
        type: string
      timestamp:
        example: 1712345678
        type: integer
    required:
    - hmac
    - nationalID
    - timestamp
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ValidateCPFRequest:
    description: Assinatura da requisiÃ§Ã£o deve ser calculada com METHOD|PATH|timestamp|payload_compacto_sem_campo_hmac
    properties:
      bornAt:
        example: "1990-01-01"
        type: string
      hmac:
        example: a1b2c3
        type: string
      nationalID:
        example: "12345678901"
        type: string
      timestamp:
        example: 1712345678
        type: integer
    required:
    - bornAt
    - hmac
    - nationalID
    - timestamp
    type: object
  github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ValidationResultResponse:
    properties:
      valid:
        example: true
        type: boolean
    type: object
  ? github_com_projeto-toq_toq_server_internal_core_utils.Optional-array_github_com_projeto-toq_toq_server_internal_adapter_left_http_dto_UpdateListingExchangePlaceRequest
  : type: object
  ? github_com_projeto-toq_toq_server_internal_core_utils.Optional-array_github_com_projeto-toq_toq_server_internal_adapter_left_http_dto_UpdateListingFeatureRequest
  : type: object
  ? github_com_projeto-toq_toq_server_internal_core_utils.Optional-array_github_com_projeto-toq_toq_server_internal_adapter_left_http_dto_UpdateListingGuaranteeRequest
  : type: object
  github_com_projeto-toq_toq_server_internal_core_utils.Optional-array_int:
    type: object
  github_com_projeto-toq_toq_server_internal_core_utils.Optional-bool:
    type: object
  github_com_projeto-toq_toq_server_internal_core_utils.Optional-float64:
    type: object
  github_com_projeto-toq_toq_server_internal_core_utils.Optional-int:
    type: object
  github_com_projeto-toq_toq_server_internal_core_utils.Optional-int64:
    type: object
  github_com_projeto-toq_toq_server_internal_core_utils.Optional-string:
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: api.gca.dev.br
info:
  contact:
    email: support@toq.com
    name: TOQ Development Team
    url: https://github.com/projeto-toq/toq_server
  description: TOQ Server - Real Estate HTTP API Server with hexagonal architecture.
    All phone numbers supplied to the API must be in E.164 format (e.g., +5511999999999).
  license:
    name: MIT
    url: https://github.com/projeto-toq/toq_server/blob/main/LICENSE
  termsOfService: http://swagger.io/terms/
  title: TOQ Server API
  version: "1.0"
paths:
  /admin/listing/catalog:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Deactivation payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogDeleteRequest'
      produces:
      - application/json
      responses:
        "204":
          description: Catalog value deactivated
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Deactivate a listing catalog value
      tags:
      - Admin
    get:
      consumes:
      - application/json
      description: 'Available categories: property_owner, property_delivered, who_lives,
        transaction_type, installment_plan, financing_blocker, visit_type, accompanying_type,
        guarantee_type.'
      parameters:
      - description: Filter payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminListingCatalogRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogValuesResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: List listing catalog values
      tags:
      - Admin
    post:
      consumes:
      - application/json
      parameters:
      - description: Creation payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogValueResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create a listing catalog value
      tags:
      - Admin
    put:
      consumes:
      - application/json
      parameters:
      - description: Partial update payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogValueResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update a listing catalog value
      tags:
      - Admin
  /admin/listing/catalog/restore:
    post:
      consumes:
      - application/json
      parameters:
      - description: Reactivation payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogRestoreRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogValueResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Reactivate a listing catalog value
      tags:
      - Admin
  /admin/roles:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Role deletion payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminDeleteRoleRequest'
      produces:
      - application/json
      responses:
        "204":
          description: Role deactivated
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete (deactivate) a role
      tags:
      - Admin
    get:
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Page size
        in: query
        name: limit
        type: integer
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by slug
        in: query
        name: slug
        type: string
      - description: Filter by system role flag
        in: query
        name: isSystemRole
        type: boolean
      - description: Filter by active flag
        in: query
        name: isActive
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminListRolesResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: List roles with pagination
      tags:
      - Admin
    post:
      consumes:
      - application/json
      parameters:
      - description: Role payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminCreateRoleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminRoleResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create a role
      tags:
      - Admin
    put:
      consumes:
      - application/json
      parameters:
      - description: Role update payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminUpdateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminRoleResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update a role
      tags:
      - Admin
  /admin/roles/restore:
    post:
      consumes:
      - application/json
      parameters:
      - description: Role reactivation payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminRestoreRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminRoleResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Reactivate a role
      tags:
      - Admin
  /admin/system-users:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Deletion payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminDeleteSystemUserRequest'
      produces:
      - application/json
      responses:
        "204":
          description: System user deactivated
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Deactivate a system user
      tags:
      - Admin
    post:
      consumes:
      - application/json
      parameters:
      - description: System user payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminCreateSystemUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminSystemUserResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new system user
      tags:
      - Admin
    put:
      consumes:
      - application/json
      parameters:
      - description: Update payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminUpdateSystemUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminSystemUserResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update system user data
      tags:
      - Admin
  /admin/user:
    post:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminGetUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminGetUserResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get full user by ID
      tags:
      - Admin
  /admin/user/approve:
    post:
      consumes:
      - application/json
      description: Status must be one of the allowed enum values. On success, sends
        FCM notification.
      parameters:
      - description: 'User ID and target status (enum: 0=active,10=refused_image,11=refused_document,12=refused_data)'
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminApproveUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminApproveUserResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Approve or refuse realtor status manually
      tags:
      - Admin
  /admin/user/creci-download-url:
    post:
      consumes:
      - application/json
      description: Returns signed URLs (selfie/front/back) for a realtor user, valid
        for a limited time
      parameters:
      - description: User ID
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminCreciDownloadURLRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminCreciDownloadURLResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get signed download URLs for CRECI documents
      tags:
      - Admin
  /admin/user/pending:
    get:
      description: Returns id, nickname, fullName, nationalID, creciNumber, creciValidity,
        creciState
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminGetPendingRealtorsResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: List realtors pending manual validation
      tags:
      - Admin
  /admin/users:
    get:
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Page size
        in: query
        name: limit
        type: integer
      - description: Filter by role name
        in: query
        name: roleName
        type: string
      - description: Filter by role slug
        in: query
        name: roleSlug
        type: string
      - description: Filter by role status enum
        in: query
        name: roleStatus
        type: integer
      - description: Filter by system role flag
        in: query
        name: isSystemRole
        type: boolean
      - description: Filter by full name
        in: query
        name: fullName
        type: string
      - description: Filter by CPF
        in: query
        name: cpf
        type: string
      - description: Filter by email
        in: query
        name: email
        type: string
      - description: Filter by phone
        in: query
        name: phoneNumber
        type: string
      - description: Filter by deletion flag
        in: query
        name: deleted
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AdminListUsersResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: List admin-facing users with filters
      tags:
      - Admin
  /auth/agency:
    post:
      consumes:
      - application/json
      description: Create a new agency account with user information
      parameters:
      - description: Device ID (UUIDv4). Optional but recommended when providing deviceToken
          for automatic sign-in
        in: header
        name: X-Device-Id
        type: string
      - description: Agency creation data (include optional deviceToken for push notifications)
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CreateAgencyRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CreateAgencyResponse'
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "409":
          description: User already exists
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "422":
          description: Validation failed
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      summary: Create agency account
      tags:
      - Authentication
  /auth/owner:
    post:
      consumes:
      - application/json
      description: Create a new owner account with user information. Address fields
        come from CEP lookup, except number, neighborhood and complement which honor
        the request payload.
      parameters:
      - description: Device ID (UUIDv4). Optional but recommended when providing deviceToken
          for automatic sign-in
        in: header
        name: X-Device-Id
        type: string
      - description: Owner creation data (include optional deviceToken for push notifications)
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CreateOwnerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CreateOwnerResponse'
        "400":
          description: Validation error (invalid input data)
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "409":
          description: User already exists
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "422":
          description: Validation failed (see details)
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      summary: Create owner account
      tags:
      - Authentication
  /auth/password/confirm:
    post:
      consumes:
      - application/json
      description: Confirm password change using verification code
      parameters:
      - description: Password change confirmation data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ConfirmPasswordChangeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ConfirmPasswordChangeResponse'
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "409":
          description: Password change not pending
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "410":
          description: Verification code expired
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "422":
          description: Invalid verification code or password validation failed
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      summary: Confirm password change
      tags:
      - Authentication
  /auth/password/request:
    post:
      consumes:
      - application/json
      description: Initiate password change process by sending verification code
      parameters:
      - description: Password change request data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.RequestPasswordChangeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.RequestPasswordChangeResponse'
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "429":
          description: Too many requests
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      summary: Request password change
      tags:
      - Authentication
  /auth/realtor:
    post:
      consumes:
      - application/json
      description: Create a new realtor account with user and CRECI information. Address
        fields come from CEP lookup, except number, neighborhood and complement which
        honor the request payload. CRECI number must be numeric ending with "-F" and
        CRECI state must be a valid Brazilian UF (both required).
      parameters:
      - description: Device ID (UUIDv4). Optional but recommended when providing deviceToken
          for automatic sign-in
        in: header
        name: X-Device-Id
        type: string
      - description: Realtor creation data (include optional deviceToken for push
          notifications)
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CreateRealtorRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CreateRealtorResponse'
        "400":
          description: Validation error (invalid input data)
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "409":
          description: User already exists
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "422":
          description: Validation failed (see details)
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      summary: Create realtor account
      tags:
      - Authentication
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Generate new access token using refresh token
      parameters:
      - description: Refresh token data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.RefreshTokenResponse'
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Invalid or expired refresh token
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      summary: Refresh access token
      tags:
      - Authentication
  /auth/signin:
    post:
      consumes:
      - application/json
      description: Authenticate user with national ID and password. Requires deviceToken
        body field and X-Device-Id (UUIDv4) header for per-device associations.
      parameters:
      - description: Device ID (UUIDv4). Required for associating sessions to devices.
        in: header
        name: X-Device-Id
        required: true
        type: string
      - description: Sign in credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.SignInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successful authentication
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.SignInResponse'
        "400":
          description: Invalid request format or missing/invalid deviceToken or X-Device-Id
            header
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "403":
          description: No active user roles
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "423":
          description: Account temporarily locked due to security measures
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "429":
          description: Too many attempts
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      summary: User sign in
      tags:
      - Authentication
  /auth/validate/cep:
    post:
      consumes:
      - application/json
      description: Retrieves CEP information using the configured provider. Requires
        signed payload.
      parameters:
      - description: Signed CEP validation payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ValidateCEPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CEPValidationResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Invalid signature or expired request
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "422":
          description: Semantic validation error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "429":
          description: Rate limited
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      summary: Validate CEP
      tags:
      - Authentication
  /auth/validate/cnpj:
    post:
      consumes:
      - application/json
      description: Validates a CNPJ using Receita Federal integration. Requires signed
        payload.
      parameters:
      - description: Signed CNPJ validation payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ValidateCNPJRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ValidationResultResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Invalid signature or expired request
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "422":
          description: Semantic validation error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "429":
          description: Rate limited
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      summary: Validate CNPJ
      tags:
      - Authentication
  /auth/validate/cpf:
    post:
      consumes:
      - application/json
      description: Validates a CPF using Receita Federal integration. Requires signed
        payload.
      parameters:
      - description: Signed CPF validation payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ValidateCPFRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ValidationResultResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Invalid signature or expired request
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "422":
          description: Semantic validation error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "429":
          description: Rate limited
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      summary: Validate CPF
      tags:
      - Authentication
  /listings:
    get:
      consumes:
      - application/json
      description: Get all listings with optional filters for status, location, price
        range, etc.
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        minimum: 1
        name: page
        type: integer
      - description: 'Items per page (default: 10)'
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      - description: Filter by listing status
        in: query
        name: status
        type: string
      - description: Filter by user ID
        in: query
        name: userId
        type: string
      - description: Filter by zip code
        in: query
        name: zipCode
        type: string
      - description: Minimum price filter
        in: query
        name: minPrice
        type: integer
      - description: Maximum price filter
        in: query
        name: maxPrice
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetAllListingsResponse'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "501":
          description: Service method not implemented
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get all listings with pagination and filters
      tags:
      - Listings
    post:
      consumes:
      - application/json
      description: Create a new listing with address details validated against the
        zip code information
      parameters:
      - description: Listing creation data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.StartListingRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.StartListingResponse'
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Start a new listing
      tags:
      - Listings
    put:
      consumes:
      - application/json
      description: Allows partial updates for draft listings. Omitted fields remain
        unchanged; present fields (including null/empty) overwrite stored values.
      parameters:
      - description: Payload for update (ID must be provided in the body)
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UpdateListingRequest'
        x-example: '{"id":98765,"owner":2,"features":[{"featureId":101,"quantity":2},{"featureId":205,"quantity":1}],"landSize":423.5,"corner":true,"nonBuildable":12.75,"buildable":410.75,"delivered":1,"whoLives":3,"description":"Apartamento
          amplo com vista panoramica","transaction":2,"sellNet":1200000,"rentNet":8500,"condominium":1200.5,"annualTax":3400.75,"annualGroundRent":1800,"exchange":true,"exchangePercentual":50,"exchangePlaces":[{"neighborhood":"Vila
          Mariana","city":"Sao Paulo","state":"SP"},{"neighborhood":"Centro","city":"Campinas","state":"SP"}],"installment":2,"financing":true,"financingBlockers":[4,7],"guarantees":[{"priority":1,"guarantee":33},{"priority":2,"guarantee":34}],"visit":3,"tenantName":"Joao
          da Silva","tenantEmail":"joao.silva@example.com","tenantPhone":"+55 11 91234-5678","accompanying":2}'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UpdateListingResponse'
        "400":
          description: Invalid payload
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update a listing
      tags:
      - Listings
  /listings/catalog:
    get:
      consumes:
      - application/json
      description: 'Available categories: property_owner, property_delivered, who_lives,
        transaction_type, installment_plan, financing_blocker, visit_type, accompanying_type,
        guarantee_type.'
      parameters:
      - description: Filter payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListingCatalogValuesResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: List active listing catalog values
      tags:
      - Listings
  /listings/features/base:
    get:
      consumes:
      - application/json
      description: Get all available base features that can be associated with listings
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetBaseFeaturesResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get base features
      tags:
      - Listings
  /listings/options:
    post:
      consumes:
      - application/json
      description: Get available property types for listings based on location
      parameters:
      - description: Location data for listing options
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetOptionsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetOptionsResponse'
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "404":
          description: Complex not found
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get listing options
      tags:
      - Listings
  /listings/photo-session/cancel:
    post:
      consumes:
      - application/json
      parameters:
      - description: Cancel payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.CancelPhotoSessionRequest'
        x-example: '{"photoSessionId":3003}'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.APIResponse'
        "400":
          description: Invalid payload
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "404":
          description: Photo session not found
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Cancel a booked photo session
      tags:
      - Listings
  /listings/photo-session/confirm:
    post:
      consumes:
      - application/json
      parameters:
      - description: Confirmation payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ConfirmPhotoSessionRequest'
        x-example: '{"listingId":1001,"slotId":2002,"reservationToken":"c36b754f-6c37-4c15-8f25-9d77ddf9bb3e"}'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ConfirmPhotoSessionResponse'
        "400":
          description: Invalid payload
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "404":
          description: Reservation not found
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "409":
          description: Slot unavailable
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Confirm a photo session reservation
      tags:
      - Listings
  /listings/photo-session/reserve:
    post:
      consumes:
      - application/json
      parameters:
      - description: Reservation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ReservePhotoSessionRequest'
        x-example: '{"listingId":1001,"slotId":2002}'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ReservePhotoSessionResponse'
        "400":
          description: Invalid payload
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "404":
          description: Slot or listing not found
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "409":
          description: Slot unavailable
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Reserve a photo session slot
      tags:
      - Listings
  /listings/photo-session/slots:
    get:
      consumes:
      - application/json
      parameters:
      - description: Start date filter (YYYY-MM-DD)
        example: "2025-10-20"
        format: date
        in: query
        name: from
        type: string
      - description: End date filter (YYYY-MM-DD)
        example: "2025-10-31"
        format: date
        in: query
        name: to
        type: string
      - description: Slot period
        enum:
        - MORNING
        - AFTERNOON
        example: MORNING
        in: query
        name: period
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Page size
        in: query
        name: size
        type: integer
      - default: date_asc
        description: Sort order
        enum:
        - date_asc
        - date_desc
        - photographer_asc
        - photographer_desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ListPhotographerSlotsResponse'
        "400":
          description: Invalid filters
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: List available photographer slots
      tags:
      - Listings
  /realtor/creci/upload-url:
    post:
      consumes:
      - application/json
      description: Create a pre-signed URL to upload a CRECI document (selfie/front/back)
      parameters:
      - description: Upload request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetCreciUploadURLRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetCreciUploadURLResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "422":
          description: Validation error (documentType or contentType)
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create pre-signed upload URL for CRECI documents
      tags:
      - Realtor
  /realtor/creci/verify:
    post:
      consumes:
      - application/json
      description: Check if selfie.jpg, front.jpg and back.jpg exist in the user's
        S3 folder; if all exist, set status to PendingManual
      produces:
      - application/json
      responses:
        "200":
          description: verification accepted
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "422":
          description: Missing required documents
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Verify CRECI documents presence
      tags:
      - Realtor
  /user/account:
    delete:
      consumes:
      - application/json
      description: Permanently delete the current user's account. Revokes all sessions,
        removes device tokens, masks PII, and detaches roles.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.DeleteAccountResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete account
      tags:
      - User
  /user/email/confirm:
    post:
      consumes:
      - application/json
      description: Confirm email change by providing the received validation code
      parameters:
      - description: Confirmation code
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ConfirmEmailChangeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Confirmation message
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ConfirmEmailChangeResponse'
        "400":
          description: Invalid request format or code
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "409":
          description: Email change not pending or already in use
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "410":
          description: Code expired
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "422":
          description: Invalid code
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      summary: Confirm email change
      tags:
      - User
  /user/email/request:
    post:
      consumes:
      - application/json
      description: Start email change by generating a validation code for the new
        email. If a pending change exists (valid or expired), a new code and expiration
        are generated and persisted, then a notification is sent.
      parameters:
      - description: New email
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.RequestEmailChangeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Email change request sent
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.RequestEmailChangeResponse'
        "400":
          description: Invalid request format or email
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "409":
          description: Email already in use
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      summary: Request email change
      tags:
      - User
  /user/email/resend:
    post:
      description: Resend the existing (still valid) validation code to the pending
        new email address. If there is no pending change, returns 409. If the code
        is expired, returns 410.
      produces:
      - application/json
      responses:
        "200":
          description: Confirmation message
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ResendEmailChangeCodeResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "409":
          description: Email change not pending or email already in use
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "410":
          description: Code expired
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      summary: Resend email change code
      tags:
      - User
  /user/opt-status:
    put:
      consumes:
      - application/json
      description: Update user's consent to receive notifications (opt-in/opt-out)
      parameters:
      - description: Opt-in request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UpdateOptStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UpdateOptStatusResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update opt-in status
      tags:
      - User
  /user/phone/confirm:
    post:
      consumes:
      - application/json
      description: Confirm a phone number change using the verification code sent
        to the new phone
      parameters:
      - description: Phone change confirmation data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ConfirmPhoneChangeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ConfirmPhoneChangeResponse'
        "400":
          description: Invalid request format or code
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "409":
          description: Phone change not pending or phone already in use
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "410":
          description: Phone change code expired
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "422":
          description: Invalid phone change code
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Confirm phone number change
      tags:
      - User
  /user/phone/request:
    post:
      consumes:
      - application/json
      description: Start a phone change by generating a validation code for the new
        phone. If a pending change exists (valid or expired), a new code and expiration
        are generated and persisted, then a notification is sent.
      parameters:
      - description: New phone number (E.164)
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.RequestPhoneChangeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Phone change request sent
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.RequestPhoneChangeResponse'
        "400":
          description: Invalid request format or phone
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "409":
          description: Phone already in use
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Request phone number change
      tags:
      - User
  /user/phone/resend:
    post:
      description: Resend the existing (still valid) validation code to the pending
        new phone number. If there is no pending change, returns 409. If the code
        is expired, returns 410.
      produces:
      - application/json
      responses:
        "200":
          description: Confirmation message
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ResendPhoneChangeCodeResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "409":
          description: Phone change not pending or phone already in use
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "410":
          description: Code expired
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Resend phone change code
      tags:
      - User
  /user/photo/download-url:
    post:
      consumes:
      - application/json
      description: Create a pre-signed URL to download a specific profile photo variant
        from storage
      parameters:
      - description: Download request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetPhotoDownloadURLRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetPhotoDownloadURLResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "422":
          description: Validation error (variant)
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create pre-signed download URL for profile photo
      tags:
      - User
  /user/photo/upload-url:
    post:
      consumes:
      - application/json
      description: Create a pre-signed URL to upload a profile photo to storage
      parameters:
      - description: Upload request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetPhotoUploadURLRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetPhotoUploadURLResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "422":
          description: Validation error (photo type or content type)
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create pre-signed upload URL for profile photo
      tags:
      - User
  /user/profile:
    get:
      consumes:
      - application/json
      description: Get the current authenticated user's profile information
      produces:
      - application/json
      responses:
        "200":
          description: Profile data with user information
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.GetProfileResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update profile fields like nickname, born_at, and address. Email/phone/password
        have dedicated flows.
      parameters:
      - description: Update profile payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UpdateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Profile updated
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UpdateProfileResponse'
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "422":
          description: Validation error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update user profile (non-sensitive fields)
      tags:
      - User
  /user/role/alternative:
    post:
      consumes:
      - application/json
      description: 'Allows owners to request a realtor role (pending CRECI validation)
        and vice versa. CRECI fields are optional, but when provided: creciNumber
        must end with "-F", and creciState must be a valid Brazilian state abbreviation
        (2 letters).'
      parameters:
      - description: Payload containing CRECI data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AddAlternativeUserRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.AddAlternativeUserRoleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create an alternative role for the authenticated user (owner â realtor)
      tags:
      - User
  /user/role/switch:
    post:
      consumes:
      - application/json
      description: Allows users who have both owner and realtor roles to switch between
        them.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.SwitchUserRoleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Switch the authenticated user's active role (owner â realtor)
      tags:
      - User
  /user/signout:
    post:
      consumes:
      - application/json
      description: Sign out the current user. If refreshToken or deviceToken is provided,
        revokes a single session/device and removes associated push tokens. Provide
        X-Device-Id when targeting a specific device.
      parameters:
      - description: Device ID (UUIDv4). Recommended for targeted signout so device
          tokens are purged
        in: header
        name: X-Device-Id
        type: string
      - description: Sign out request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.SignOutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Sign out confirmation message
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.SignOutResponse'
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Sign out user
      tags:
      - User
  /user/status:
    get:
      consumes:
      - application/json
      description: Returns the status of the currently active user role. Absence of
        an active role is treated as internal inconsistency.
      produces:
      - application/json
      responses:
        "200":
          description: Active role status (status campo inteiro enum ver comentÃ¡rios
            DTO)
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.UserStatusResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/github_com_projeto-toq_toq_server_internal_adapter_left_http_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get active user role status
      tags:
      - User
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
