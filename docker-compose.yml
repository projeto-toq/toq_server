services:
  # # TOQ Server HTTP/REST API
  # toq-server:
  #   build: .
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     - DB_HOST=mysql
  #     - DB_PORT=3306
  #     - DB_USER=root
  #     - DB_PASSWORD=rootpassword
  #     - DB_NAME=toq_db
  #   depends_on:
  #     - mysql
  #   volumes:
  #     - ./configs:/root/configs
  #   networks:
  #     - toq-network

  # MySQL Database
  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=toq_db
      - MYSQL_USER=toq_user
      - MYSQL_PASSWORD=toq_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/setup-user.sql:/docker-entrypoint-initdb.d/setup-user.sql
      - ./data:/var/lib/mysql-files
    networks:
      - toq-network

  # Redis (for caching)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - toq-network

  # Prometheus (for metrics)
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - toq-network

  # Grafana (for visualization)
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboard-files:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    networks:
      - toq-network

  # Swagger UI (standalone)
  swagger-ui:
    image: swaggerapi/swagger-ui
    ports:
      - "8081:8080"
    environment:
      - SWAGGER_JSON=/docs/swagger.json
    volumes:
      - ./docs:/docs
    networks:
      - toq-network

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"   # OTLP gRPC receiver (usado pela aplicação)
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
    networks:
      - toq-network

networks:
  toq-network:
    driver: bridge

volumes:
  mysql_data:
  grafana_data:
